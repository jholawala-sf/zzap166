{"version":3,"file":"pages-page.js","mappings":"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","sources":["webpack://composable-storefront-toolkit/./app/components/page-designer/index.js","webpack://composable-storefront-toolkit/./overlays/page-designer-theme-home/app/pages/page/index.jsx","webpack://composable-storefront-toolkit/./node_modules/@salesforce/pwa-kit-react-sdk/ssr/universal/errors.js","webpack://composable-storefront-toolkit/./node_modules/@chakra-ui/textarea/dist/chunk-4IH3O7BJ.mjs"],"sourcesContent":["import React, {useContext} from 'react'\nimport PropTypes from 'prop-types'\nimport {Heading, Text} from '@chakra-ui/react'\nimport {Textarea} from '@chakra-ui/react'\nimport {\n    PageDesignerContext,\n    PDErrorBoundary,\n    DebugContext\n} from '@salesforce/retail-react-app/app/components/page-designer/support'\nimport {\n    Hider,\n    PageDesignerRegions\n} from '@salesforce/retail-react-app/app/components/page-designer/tree'\nimport {Helmet} from 'react-helmet'\nimport {getConfig} from '@salesforce/pwa-kit-runtime/utils/ssr-config'\n\n/**\n * @typedef PDPage\n * @property {string} id\n * @property {object} data\n * @property {object} custom\n * @property {PDRegion[]} regions\n */\n\nfunction getConfigText(config) {\n    const _config = {\n        ...config,\n        app: {\n            ...config.app,\n            enablePWAKitPrivateClient: config.app.commerceAPI.parameters.__publicClientId\n                ? false\n                : true,\n            commerceAPI: {\n                ...config.app.commerceAPI,\n                parameters: {\n                    ...config.app.commerceAPI.parameters,\n                    // if we have a public client available show that instead of the private client as it's easier\n                    clientId:\n                        config.app.commerceAPI.parameters.__publicClientId ??\n                        config.app.commerceAPI.parameters.clientId\n                }\n            },\n            dataCloudAPI: {\n                appSourceId: '',\n                tenantId: ''\n            }\n        },\n        ssrParameters: {\n            ...config.ssrParameters,\n            // clean up some junk added by pwa-kit-runtime\n            proxyConfigs: config.ssrParameters.proxyConfigs.map((proxy) => {\n                delete proxy.proxyPath\n                delete proxy.cachingPath\n                return proxy\n            })\n        }\n    }\n    return `module.exports = ${JSON.stringify(_config, null, 2)}`\n}\n\n/**\n * Implements a PageDesigner page in react\n *\n * Will delegate the regions/components of the page to other components by identifier\n * composing similar to platform page designer\n * @param {PDPage} page - PageDesigner structure\n *\n * @constructor\n */\nexport default function PageDesignerPage({page}) {\n    const {debug} = useContext(DebugContext)\n    const {editMode} = useContext(PageDesignerContext)\n    const config = getConfig()\n    return (\n        <>\n            {debug && (\n                <>\n                    <Text size=\"h1\">PAGE: {page.id}</Text>\n                    <h2>PD Edit Mode: {editMode ? 'TRUE' : 'FALSE'}</h2>\n                </>\n            )}\n            {debug && (\n                <>\n                    <Hider data={Object.assign(page.data, page.custom)} />\n                </>\n            )}\n            {page.custom && page.custom.pageTitle && (\n                <Helmet>\n                    <title>{page.custom.pageTitle}</title>\n                </Helmet>\n            )}\n            <PDErrorBoundary type=\"page\">\n                <PageDesignerRegions regions={page.regions} />\n            </PDErrorBoundary>\n            {debug && config && config.app && (\n                <>\n                    <Heading as=\"h2\">App Configuration (copy to config/local.js)</Heading>\n                    <Textarea size=\"lg\">{getConfigText(config)}</Textarea>\n                </>\n            )}\n        </>\n    )\n}\nPageDesignerPage.propTypes = {\n    page: PropTypes.object,\n    debug: PropTypes.bool,\n    preview: PropTypes.bool,\n    editMode: PropTypes.bool\n}\n","import React, {useEffect} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport {Box} from '@chakra-ui/react'\n\n// Project Components\nimport Seo from '@salesforce/retail-react-app/app/components/seo'\nimport PageDesignerPage from '@salesforce/retail-react-app/app/components/page-designer'\n\n//Hooks\nimport useEinstein from '@salesforce/retail-react-app/app/hooks/use-einstein'\nimport {useLocation, useParams} from 'react-router-dom'\nimport {usePage} from '@salesforce/commerce-sdk-react'\nimport {HTTPError, HTTPNotFound} from '@salesforce/pwa-kit-react-sdk/ssr/universal/errors'\n\nconst Page = () => {\n    const einstein = useEinstein()\n    const {pathname} = useLocation()\n\n    const {pageId} = useParams()\n    const {\n        data: page,\n        error,\n        isLoading\n    } = usePage(\n        {parameters: {pageId}},\n        {\n            refetchOnMount: 'always'\n        }\n    )\n\n    if (error) {\n        let ErrorClass = error.response?.status === 404 ? HTTPNotFound : HTTPError\n        throw new ErrorClass(error.response?.statusText)\n    }\n\n    /**************** Einstein ****************/\n    useEffect(() => {\n        einstein.sendViewPage(pathname)\n    }, [])\n\n    return (\n        <Box layerStyle=\"page\">\n            <Seo title={page?.custom?.pageTitle || 'Page'} description=\"\" keywords=\"\" />\n\n            {!isLoading && page && <PageDesignerPage page={page} />}\n        </Box>\n    )\n}\n\nPage.getTemplateName = () => 'page'\n\nPage.shouldGetProps = ({previousLocation, location}) =>\n    !previousLocation || previousLocation.pathname !== location.pathname\n\nPage.getProps = async ({res, api, params}) => {\n    const {pageId} = params\n    if (res) {\n        // res.set('Cache-Control', 'max-age=31536000')\n    }\n\n    const page = await api.shopperExperience.getPage({\n        parameters: {\n            pageId: pageId\n        }\n    })\n\n    return {\n        page\n    }\n}\n\nPage.propTypes = {\n    /**\n     * The search result object showing all the product hits, that belong\n     * in the supplied category.\n     */\n    productSearchResult: PropTypes.object,\n    page: PropTypes.object,\n    /**\n     * The current state of `getProps` when running this value is `true`, otherwise it's\n     * `false`. (Provided internally)\n     */\n    isLoading: PropTypes.bool\n}\n\nexport default Page\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HTTPNotFound = exports.HTTPError = void 0;\n/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nclass HTTPError extends Error {\n  constructor(status, message) {\n    super(message);\n    this.constructor = HTTPError;\n    this.__proto__ = HTTPError.prototype;\n    this.message = message;\n    this.status = status;\n  }\n  toString() {\n    return `HTTPError ${this.status}: ${this.message}`;\n  }\n}\nexports.HTTPError = HTTPError;\nclass HTTPNotFound extends HTTPError {\n  constructor(message) {\n    super(404, message);\n    this.constructor = HTTPNotFound;\n    this.__proto__ = HTTPNotFound.prototype;\n  }\n}\nexports.HTTPNotFound = HTTPNotFound;","'use client'\n\n// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport {\n  Textarea\n};\n//# sourceMappingURL=chunk-4IH3O7BJ.mjs.map"],"names":["React","useContext","PropTypes","Heading","Text","Textarea","PageDesignerContext","PDErrorBoundary","DebugContext","Hider","PageDesignerRegions","Helmet","getConfig","getConfigText","config","_config","_objectSpread","app","enablePWAKitPrivateClient","commerceAPI","parameters","__publicClientId","clientId","dataCloudAPI","appSourceId","tenantId","ssrParameters","proxyConfigs","map","proxy","proxyPath","cachingPath","JSON","stringify","PageDesignerPage","page","debug","editMode","createElement","Fragment","size","id","data","_extends","custom","pageTitle","type","regions","as","propTypes","object","bool","preview","useEffect","Box","Seo","useEinstein","useLocation","useParams","usePage","HTTPError","HTTPNotFound","Page","_page$custom","einstein","pathname","pageId","error","isLoading","refetchOnMount","_error$response","_error$response2","ErrorClass","response","status","statusText","sendViewPage","layerStyle","title","description","keywords","getTemplateName","shouldGetProps","previousLocation","location","getProps","_ref","_asyncToGenerator","res","api","params","shopperExperience","getPage","_x","apply","arguments","productSearchResult"],"sourceRoot":""}