{"version":3,"file":"salesforce-retail-react-app-app-pages-product-detail.js","mappings":"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","sources":["webpack://composable-storefront-toolkit/./app/pages/product-detail/index.jsx","webpack://composable-storefront-toolkit/./app/pages/product-detail/partials/information-accordion.jsx","webpack://composable-storefront-toolkit/./node_modules/@salesforce/pwa-kit-react-sdk/ssr/universal/errors.js"],"sourcesContent":["/*\n * Copyright (c) 2022, Salesforce, Inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport React, {Fragment, useCallback, useEffect, useState, useMemo} from 'react'\nimport PropTypes from 'prop-types'\nimport {Helmet} from 'react-helmet'\nimport {FormattedMessage, useIntl} from 'react-intl'\nimport {\n    normalizeSetBundleProduct,\n    getUpdateBundleChildArray\n} from '@salesforce/retail-react-app/app/utils/product-utils'\n\n// Components\nimport {Box, Button, Stack} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {\n    useProduct,\n    useProducts,\n    useCategory,\n    useShopperCustomersMutation,\n    useShopperBasketsMutation,\n    useCustomerId,\n    useShopperBasketsMutationHelper\n} from '@salesforce/commerce-sdk-react'\n\n// Hooks\nimport {useCurrentBasket} from '@salesforce/retail-react-app/app/hooks/use-current-basket'\nimport {useVariant} from '@salesforce/retail-react-app/app/hooks'\nimport useNavigation from '@salesforce/retail-react-app/app/hooks/use-navigation'\nimport useEinstein from '@salesforce/retail-react-app/app/hooks/use-einstein'\nimport useDataCloud from '@salesforce/retail-react-app/app/hooks/use-datacloud'\nimport useActiveData from '@salesforce/retail-react-app/app/hooks/use-active-data'\nimport {useServerContext} from '@salesforce/pwa-kit-react-sdk/ssr/universal/hooks'\n// Project Components\nimport RecommendedProducts from '@salesforce/retail-react-app/app/components/recommended-products'\nimport ProductView from '@salesforce/retail-react-app/app/components/product-view'\nimport InformationAccordion from '@salesforce/retail-react-app/app/pages/product-detail/partials/information-accordion'\n\nimport {HTTPNotFound, HTTPError} from '@salesforce/pwa-kit-react-sdk/ssr/universal/errors'\nimport logger from '@salesforce/retail-react-app/app/utils/logger-instance'\n\n// constant\nimport {\n    API_ERROR_MESSAGE,\n    EINSTEIN_RECOMMENDERS,\n    MAX_CACHE_AGE,\n    TOAST_ACTION_VIEW_WISHLIST,\n    TOAST_MESSAGE_ADDED_TO_WISHLIST,\n    TOAST_MESSAGE_ALREADY_IN_WISHLIST,\n    STALE_WHILE_REVALIDATE\n} from '@salesforce/retail-react-app/app/constants'\nimport {rebuildPathWithParams} from '@salesforce/retail-react-app/app/utils/url'\nimport {useHistory, useLocation, useParams} from 'react-router-dom'\nimport {useToast} from '@salesforce/retail-react-app/app/hooks/use-toast'\nimport {useWishList} from '@salesforce/retail-react-app/app/hooks/use-wish-list'\n\nconst ProductDetail = () => {\n    const {formatMessage} = useIntl()\n    const history = useHistory()\n    const location = useLocation()\n    const einstein = useEinstein()\n    const dataCloud = useDataCloud()\n    const activeData = useActiveData()\n    const toast = useToast()\n    const navigate = useNavigation()\n    const customerId = useCustomerId()\n\n    /****************************** Basket *********************************/\n    const {isLoading: isBasketLoading} = useCurrentBasket()\n    const {addItemToNewOrExistingBasket} = useShopperBasketsMutationHelper()\n    const updateItemsInBasketMutation = useShopperBasketsMutation('updateItemsInBasket')\n    const {res} = useServerContext()\n    if (res) {\n        res.set(\n            'Cache-Control',\n            `s-maxage=${MAX_CACHE_AGE}, stale-while-revalidate=${STALE_WHILE_REVALIDATE}`\n        )\n    }\n\n    /*************************** Product Detail and Category ********************/\n    const {productId} = useParams()\n    const urlParams = new URLSearchParams(location.search)\n    const {\n        data: product,\n        isLoading: isProductLoading,\n        isError: isProductError,\n        error: productError\n    } = useProduct(\n        {\n            parameters: {\n                id: urlParams.get('pid') || productId,\n                perPricebook: true,\n                expand: [\n                    'availability',\n                    'promotions',\n                    'options',\n                    'images',\n                    'prices',\n                    'variations',\n                    'set_products',\n                    'bundled_products',\n                    'page_meta_tags'\n                ],\n                allImages: true\n            }\n        },\n        {\n            // When shoppers select a different variant (and the app fetches the new data),\n            // the old data is still rendered (and not the skeletons).\n            keepPreviousData: true\n        }\n    )\n\n    /** TOOLKIT CUSTOMIZATION (options) **/\n    const selectedOptions = useMemo(() => {\n        const params = new URLSearchParams(location.search)\n        const options = new Map()\n        params.forEach((value, key) => {\n            if (key.includes('option-')) {\n                options.set(key.substring(7), value)\n            }\n        })\n        return options\n    }, [location.search])\n    /** END TOOLKIT CUSTOMIZATION **/\n\n    // Note: Since category needs id from product detail, it can't be server side rendered atm\n    // until we can do dependent query on server\n    const {\n        data: category,\n        isError: isCategoryError,\n        error: categoryError\n    } = useCategory({\n        parameters: {\n            id: product?.primaryCategoryId,\n            levels: 1\n        }\n    })\n\n    /****************************** Sets and Bundles *********************************/\n    const [childProductSelection, setChildProductSelection] = useState({})\n    const [childProductOrderability, setChildProductOrderability] = useState({})\n    const [selectedBundleQuantity, setSelectedBundleQuantity] = useState(1)\n    const childProductRefs = React.useRef({})\n    const isProductASet = product?.type.set\n    const isProductABundle = product?.type.bundle\n\n    let bundleChildVariantIds = ''\n    if (isProductABundle)\n        bundleChildVariantIds = Object.keys(childProductSelection)\n            ?.map((key) => childProductSelection[key].variant.productId)\n            .join(',')\n\n    const {data: bundleChildrenData} = useProducts(\n        {\n            parameters: {\n                ids: bundleChildVariantIds,\n                allImages: false,\n                expand: ['availability', 'variations'],\n                select: '(data.(id,inventory,master))'\n            }\n        },\n        {\n            enabled: bundleChildVariantIds?.length > 0,\n            keepPreviousData: true\n        }\n    )\n\n    if (isProductABundle && bundleChildrenData) {\n        // Loop through the bundle children and update the inventory for variant selection\n        product.bundledProducts.forEach(({product: childProduct}, index) => {\n            const matchingChildProduct = bundleChildrenData.data.find(\n                (bundleChild) => bundleChild.master.masterId === childProduct.id\n            )\n            if (matchingChildProduct) {\n                product.bundledProducts[index].product = {\n                    ...childProduct,\n                    inventory: matchingChildProduct.inventory\n                }\n            }\n        })\n    }\n\n    const comboProduct = isProductASet || isProductABundle ? normalizeSetBundleProduct(product) : {}\n\n    /**************** Error Handling ****************/\n\n    if (isProductError) {\n        const errorStatus = productError?.response?.status\n        switch (errorStatus) {\n            case 404:\n                throw new HTTPNotFound('Product Not Found.')\n            default:\n                throw new HTTPError(errorStatus, `HTTP Error ${errorStatus} occurred.`)\n        }\n    }\n    if (isCategoryError) {\n        const errorStatus = categoryError?.response?.status\n        switch (errorStatus) {\n            case 404:\n                throw new HTTPNotFound('Category Not Found.')\n            default:\n                throw new HTTPError(errorStatus, `HTTP Error ${errorStatus} occurred.`)\n        }\n    }\n\n    const [primaryCategory, setPrimaryCategory] = useState(category)\n    const variant = useVariant(product)\n    // This page uses the `primaryCategoryId` to retrieve the category data. This attribute\n    // is only available on `master` products. Since a variation will be loaded once all the\n    // attributes are selected (to get the correct inventory values), the category information\n    // is overridden. This will allow us to keep the initial category around until a different\n    // master product is loaded.\n    useEffect(() => {\n        if (category) {\n            setPrimaryCategory(category)\n        }\n    }, [category])\n\n    /**************** Product Variant ****************/\n    useEffect(() => {\n        /** TOOLKIT CUSTOMIZATION **/\n        if (!variant || product?.type?.item) {\n            return\n        }\n        /** END TOOLKIT CUSTOMIZATION **/\n        // update the variation attributes parameter on\n        // the url accordingly as the variant changes\n        const updatedUrl = rebuildPathWithParams(`${location.pathname}${location.search}`, {\n            pid: variant?.productId\n        })\n        history.replace(updatedUrl)\n    }, [variant])\n\n    /**************** Wishlist ****************/\n    const {data: wishlist, isLoading: isWishlistLoading} = useWishList()\n    const createCustomerProductListItem = useShopperCustomersMutation(\n        'createCustomerProductListItem'\n    )\n\n    const handleAddToWishlist = (product, variant, quantity) => {\n        const isItemInWishlist = wishlist?.customerProductListItems?.find(\n            (i) => i.productId === variant?.productId || i.productId === product?.id\n        )\n\n        if (!isItemInWishlist) {\n            createCustomerProductListItem.mutate(\n                {\n                    parameters: {\n                        listId: wishlist.id,\n                        customerId\n                    },\n                    body: {\n                        // NOTE: API does not respect quantity, it always adds 1\n                        quantity,\n                        productId: variant?.productId || product?.id,\n                        public: false,\n                        priority: 1,\n                        type: 'product'\n                    }\n                },\n                {\n                    onSuccess: () => {\n                        toast({\n                            title: formatMessage(TOAST_MESSAGE_ADDED_TO_WISHLIST, {quantity: 1}),\n                            status: 'success',\n                            action: (\n                                // it would be better if we could use <Button as={Link}>\n                                // but unfortunately the Link component is not compatible\n                                // with Chakra Toast, since the ToastManager is rendered via portal\n                                // and the toast doesn't have access to intl provider, which is a\n                                // requirement of the Link component.\n                                <Button\n                                    variant=\"link\"\n                                    onClick={() => navigate('/account/wishlist')}\n                                >\n                                    {formatMessage(TOAST_ACTION_VIEW_WISHLIST)}\n                                </Button>\n                            )\n                        })\n                    },\n                    onError: () => {\n                        showError()\n                    }\n                }\n            )\n        } else {\n            toast({\n                title: formatMessage(TOAST_MESSAGE_ALREADY_IN_WISHLIST),\n                status: 'info',\n                action: (\n                    <Button variant=\"link\" onClick={() => navigate('/account/wishlist')}>\n                        {formatMessage(TOAST_ACTION_VIEW_WISHLIST)}\n                    </Button>\n                )\n            })\n        }\n    }\n\n    /**************** Add To Cart ****************/\n    const showToast = useToast()\n    const showError = () => {\n        showToast({\n            title: formatMessage(API_ERROR_MESSAGE),\n            status: 'error'\n        })\n    }\n\n    const handleAddToCart = async (productSelectionValues) => {\n        try {\n            /** TOOLKIT CUSTOMIZATION (options) **/\n            var options\n            if (selectedOptions?.size > 0) {\n                options = Array.from(selectedOptions, ([key, value]) => ({\n                    optionId: key,\n                    optionValueId: value\n                }))\n            }\n            const productItems = productSelectionValues.map(({variant, quantity}) => ({\n                productId: variant.productId,\n                price: variant.price,\n                quantity,\n                optionItems: options\n            }))\n            /** END TOOLKIT CUSTOMIZATION **/\n\n            await addItemToNewOrExistingBasket(productItems)\n\n            einstein.sendAddToCart(productItems)\n\n            // If the items were successfully added, set the return value to be used\n            // by the add to cart modal.\n            return productSelectionValues\n        } catch (error) {\n            console.log('error', error)\n            showError(error)\n        }\n    }\n\n    /**************** Product Set/Bundles Handlers ****************/\n    const handleChildProductValidation = useCallback(() => {\n        // Run validation for all child products. This will ensure the error\n        // messages are shown.\n        Object.values(childProductRefs.current).forEach(({validateOrderability}) => {\n            validateOrderability({scrollErrorIntoView: false})\n        })\n\n        // Using ot state for which child products are selected, scroll to the first\n        // one that isn't selected.\n        const selectedProductIds = Object.keys(childProductSelection)\n        const firstUnselectedProduct = comboProduct.childProducts.find(\n            ({product: childProduct}) => !selectedProductIds.includes(childProduct.id)\n        )?.product\n\n        if (firstUnselectedProduct) {\n            // Get the reference to the product view and scroll to it.\n            const {ref} = childProductRefs.current[firstUnselectedProduct.id]\n\n            if (ref.scrollIntoView) {\n                ref.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'end'\n                })\n            }\n\n            return false\n        }\n\n        return true\n    }, [product, childProductSelection])\n\n    /**************** Product Set Handlers ****************/\n    const handleProductSetAddToCart = () => {\n        // Get all the selected products, and pass them to the addToCart handler which\n        // accepts an array.\n        const productSelectionValues = Object.values(childProductSelection)\n        return handleAddToCart(productSelectionValues)\n    }\n\n    /**************** Product Bundle Handlers ****************/\n    // Top level bundle does not have variants\n    const handleProductBundleAddToCart = async (variant, selectedQuantity) => {\n        try {\n            const childProductSelections = Object.values(childProductSelection)\n\n            const productItems = [\n                {\n                    productId: product.id,\n                    price: product.price,\n                    quantity: selectedQuantity,\n                    // The add item endpoint in the shopper baskets API does not respect variant selections\n                    // for bundle children, so we have to make a follow up call to update the basket\n                    // with the chosen variant selections\n                    bundledProductItems: childProductSelections.map((child) => {\n                        return {\n                            productId: child.variant.productId,\n                            quantity: child.quantity\n                        }\n                    })\n                }\n            ]\n\n            const res = await addItemToNewOrExistingBasket(productItems)\n\n            const bundleChildMasterIds = childProductSelections.map((child) => {\n                return child.product.id\n            })\n\n            // since the returned data includes all products in basket\n            // here we compare list of productIds in bundleProductItems of each productItem to filter out the\n            // current bundle that was last added into cart\n            const currentBundle = res.productItems.find((productItem) => {\n                if (!productItem.bundledProductItems?.length) return\n                const bundleChildIds = productItem.bundledProductItems?.map((item) => {\n                    // seek out the bundle child that still uses masterId as product id\n                    return item.productId\n                })\n                return bundleChildIds.every((id) => bundleChildMasterIds.includes(id))\n            })\n\n            const itemsToBeUpdated = getUpdateBundleChildArray(\n                currentBundle,\n                childProductSelections\n            )\n\n            if (itemsToBeUpdated.length) {\n                // make a follow up call to update child variant selection for product bundle\n                // since add item endpoint doesn't currently consider product bundle child variants\n                await updateItemsInBasketMutation.mutateAsync({\n                    method: 'PATCH',\n                    parameters: {\n                        basketId: res.basketId\n                    },\n                    body: itemsToBeUpdated\n                })\n            }\n\n            einstein.sendAddToCart(productItems)\n\n            return childProductSelections\n        } catch (error) {\n            showError(error)\n        }\n    }\n\n    /**************** Einstein ****************/\n    useEffect(() => {\n        if (product && product.type.set) {\n            einstein.sendViewProduct(product)\n            dataCloud.sendViewProduct(product)\n            const childrenProducts = product.setProducts\n            childrenProducts.map((child) => {\n                try {\n                    einstein.sendViewProduct(child)\n                } catch (err) {\n                    logger.error('Einstein sendViewProduct error', {\n                        namespace: 'ProductDetail.useEffect',\n                        additionalProperties: {error: err, child}\n                    })\n                }\n                activeData.sendViewProduct(category, child, 'detail')\n                dataCloud.sendViewProduct(child)\n            })\n        } else if (product) {\n            try {\n                einstein.sendViewProduct(product)\n            } catch (err) {\n                logger.error('Einstein sendViewProduct error', {\n                    namespace: 'ProductDetail.useEffect',\n                    additionalProperties: {error: err, product}\n                })\n            }\n            activeData.sendViewProduct(category, product, 'detail')\n            dataCloud.sendViewProduct(product)\n        }\n    }, [product])\n\n    return (\n        <Box\n            className=\"sf-product-detail-page\"\n            layerStyle=\"page\"\n            data-testid=\"product-details-page\"\n        >\n            <Helmet>\n                <title>{product?.pageTitle}</title>\n                {product?.pageMetaTags?.length > 0 &&\n                    product.pageMetaTags.map(({id, value}) => (\n                        <meta name={id} content={value} key={id} />\n                    ))}\n                {/* Fallback for description if not included in pageMetaTags */}\n                {!product?.pageMetaTags?.some((tag) => tag.id === 'description') &&\n                    product?.pageDescription && (\n                        <meta name=\"description\" content={product.pageDescription} />\n                    )}\n            </Helmet>\n\n            <Stack spacing={16}>\n                {isProductASet || isProductABundle ? (\n                    <Fragment>\n                        <ProductView\n                            product={product}\n                            category={primaryCategory?.parentCategoryTree || []}\n                            addToCart={\n                                isProductASet\n                                    ? handleProductSetAddToCart\n                                    : handleProductBundleAddToCart\n                            }\n                            addToWishlist={handleAddToWishlist}\n                            isProductLoading={isProductLoading}\n                            isBasketLoading={isBasketLoading}\n                            isWishlistLoading={isWishlistLoading}\n                            validateOrderability={handleChildProductValidation}\n                            childProductOrderability={childProductOrderability}\n                            setSelectedBundleQuantity={setSelectedBundleQuantity}\n                        />\n\n                        <hr />\n\n                        {/* TODO: consider `childProduct.belongsToSet` */}\n                        {\n                            // Render the child products\n                            comboProduct.childProducts.map(\n                                ({product: childProduct, quantity: childQuantity}) => (\n                                    <Box key={childProduct.id} data-testid=\"child-product\">\n                                        <ProductView\n                                            // Do not use an arrow function as we are manipulating the functions scope.\n                                            ref={function (ref) {\n                                                // Assign the \"set\" scope of the ref, this is how we access the internal\n                                                // validation.\n                                                childProductRefs.current[childProduct.id] = {\n                                                    ref,\n                                                    validateOrderability: this.validateOrderability\n                                                }\n                                            }}\n                                            product={childProduct}\n                                            isProductPartOfSet={isProductASet}\n                                            isProductPartOfBundle={isProductABundle}\n                                            childOfBundleQuantity={childQuantity}\n                                            selectedBundleParentQuantity={selectedBundleQuantity}\n                                            addToCart={\n                                                isProductASet\n                                                    ? (variant, quantity) =>\n                                                          handleAddToCart([\n                                                              {\n                                                                  product: childProduct,\n                                                                  variant,\n                                                                  quantity\n                                                              }\n                                                          ])\n                                                    : null\n                                            }\n                                            addToWishlist={\n                                                isProductASet ? handleAddToWishlist : null\n                                            }\n                                            onVariantSelected={(product, variant, quantity) => {\n                                                if (quantity) {\n                                                    setChildProductSelection((previousState) => ({\n                                                        ...previousState,\n                                                        [product.id]: {\n                                                            product,\n                                                            variant,\n                                                            quantity: isProductABundle\n                                                                ? childQuantity\n                                                                : quantity\n                                                        }\n                                                    }))\n                                                } else {\n                                                    const selections = {...childProductSelection}\n                                                    delete selections[product.id]\n                                                    setChildProductSelection(selections)\n                                                }\n                                            }}\n                                            isProductLoading={isProductLoading}\n                                            isBasketLoading={isBasketLoading}\n                                            isWishlistLoading={isWishlistLoading}\n                                            setChildProductOrderability={\n                                                setChildProductOrderability\n                                            }\n                                        />\n                                        <InformationAccordion product={childProduct} />\n\n                                        <Box display={['none', 'none', 'none', 'block']}>\n                                            <hr />\n                                        </Box>\n                                    </Box>\n                                )\n                            )\n                        }\n                    </Fragment>\n                ) : (\n                    <Fragment>\n                        <ProductView\n                            product={product}\n                            category={primaryCategory?.parentCategoryTree || []}\n                            addToCart={(variant, quantity) =>\n                                handleAddToCart([{product, variant, quantity}])\n                            }\n                            addToWishlist={handleAddToWishlist}\n                            isProductLoading={isProductLoading}\n                            isBasketLoading={isBasketLoading}\n                            isWishlistLoading={isWishlistLoading}\n                        />\n                        <InformationAccordion product={product} />\n                    </Fragment>\n                )}\n\n                {/* Product Recommendations */}\n                <Stack spacing={16}>\n                    {!isProductASet && (\n                        <RecommendedProducts\n                            title={\n                                <FormattedMessage\n                                    defaultMessage=\"Complete the Set\"\n                                    id=\"product_detail.recommended_products.title.complete_set\"\n                                />\n                            }\n                            recommender={EINSTEIN_RECOMMENDERS.PDP_COMPLETE_SET}\n                            products={[product]}\n                            mx={{base: -4, md: -8, lg: 0}}\n                            shouldFetch={() => product?.id}\n                        />\n                    )}\n                    <RecommendedProducts\n                        title={\n                            <FormattedMessage\n                                defaultMessage=\"You might also like\"\n                                id=\"product_detail.recommended_products.title.might_also_like\"\n                            />\n                        }\n                        recommender={EINSTEIN_RECOMMENDERS.PDP_MIGHT_ALSO_LIKE}\n                        products={[product]}\n                        mx={{base: -4, md: -8, lg: 0}}\n                        shouldFetch={() => product?.id}\n                    />\n\n                    <RecommendedProducts\n                        // The Recently Viewed recommender doesn't use `products`, so instead we\n                        // provide a key to update the recommendations on navigation.\n                        key={location.key}\n                        title={\n                            <FormattedMessage\n                                defaultMessage=\"Recently Viewed\"\n                                id=\"product_detail.recommended_products.title.recently_viewed\"\n                            />\n                        }\n                        recommender={EINSTEIN_RECOMMENDERS.PDP_RECENTLY_VIEWED}\n                        mx={{base: -4, md: -8, lg: 0}}\n                    />\n                </Stack>\n            </Stack>\n        </Box>\n    )\n}\n\nProductDetail.getTemplateName = () => 'product-detail'\n\nProductDetail.propTypes = {\n    /**\n     * The current react router match object. (Provided internally)\n     */\n    match: PropTypes.object\n}\n\nexport default ProductDetail\n","/*\n * Copyright (c) 2023, Salesforce, Inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionButton,\n    AccordionPanel,\n    AccordionIcon,\n    Box,\n    Stack\n} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {useIntl} from 'react-intl'\n\nconst InformationAccordion = ({product}) => {\n    const {formatMessage} = useIntl()\n\n    return (\n        <Stack direction=\"row\" spacing={[0, 0, 0, 16]}>\n            <Accordion allowMultiple maxWidth={'896px'} flex={[1, 1, 1, 5]}>\n                {/* Details */}\n                <AccordionItem>\n                    <h2>\n                        <AccordionButton height=\"64px\">\n                            <Box flex=\"1\" textAlign=\"left\" fontWeight=\"bold\" fontSize=\"lg\">\n                                {formatMessage({\n                                    defaultMessage: 'Product Detail',\n                                    id: 'product_detail.accordion.button.product_detail'\n                                })}\n                            </Box>\n                            <AccordionIcon />\n                        </AccordionButton>\n                    </h2>\n                    <AccordionPanel mb={6} mt={4}>\n                        <div\n                            dangerouslySetInnerHTML={{\n                                __html: product?.longDescription\n                            }}\n                        />\n                    </AccordionPanel>\n                </AccordionItem>\n\n                {/* Size & Fit */}\n                <AccordionItem>\n                    <h2>\n                        <AccordionButton height=\"64px\">\n                            <Box flex=\"1\" textAlign=\"left\" fontWeight=\"bold\" fontSize=\"lg\">\n                                {formatMessage({\n                                    defaultMessage: 'Size & Fit',\n                                    id: 'product_detail.accordion.button.size_fit'\n                                })}\n                            </Box>\n                            <AccordionIcon />\n                        </AccordionButton>\n                    </h2>\n                    <AccordionPanel mb={6} mt={4}>\n                        {formatMessage({\n                            defaultMessage: 'Coming Soon',\n                            id: 'product_detail.accordion.message.coming_soon'\n                        })}\n                    </AccordionPanel>\n                </AccordionItem>\n\n                {/* Reviews */}\n                <AccordionItem>\n                    <h2>\n                        <AccordionButton height=\"64px\">\n                            <Box flex=\"1\" textAlign=\"left\" fontWeight=\"bold\" fontSize=\"lg\">\n                                {formatMessage({\n                                    defaultMessage: 'Reviews',\n                                    id: 'product_detail.accordion.button.reviews'\n                                })}\n                            </Box>\n                            <AccordionIcon />\n                        </AccordionButton>\n                    </h2>\n                    <AccordionPanel mb={6} mt={4}>\n                        {formatMessage({\n                            defaultMessage: 'Coming Soon',\n                            id: 'product_detail.accordion.message.coming_soon'\n                        })}\n                    </AccordionPanel>\n                </AccordionItem>\n\n                {/* Questions */}\n                <AccordionItem>\n                    <h2>\n                        <AccordionButton height=\"64px\">\n                            <Box flex=\"1\" textAlign=\"left\" fontWeight=\"bold\" fontSize=\"lg\">\n                                {formatMessage({\n                                    defaultMessage: 'Questions',\n                                    id: 'product_detail.accordion.button.questions'\n                                })}\n                            </Box>\n                            <AccordionIcon />\n                        </AccordionButton>\n                    </h2>\n                    <AccordionPanel mb={6} mt={4}>\n                        {formatMessage({\n                            defaultMessage: 'Coming Soon',\n                            id: 'product_detail.accordion.message.coming_soon'\n                        })}\n                    </AccordionPanel>\n                </AccordionItem>\n            </Accordion>\n            <Box display={['none', 'none', 'none', 'block']} flex={4}></Box>\n        </Stack>\n    )\n}\n\nInformationAccordion.propTypes = {\n    product: PropTypes.object\n}\n\nexport default InformationAccordion\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HTTPNotFound = exports.HTTPError = void 0;\n/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nclass HTTPError extends Error {\n  constructor(status, message) {\n    super(message);\n    this.constructor = HTTPError;\n    this.__proto__ = HTTPError.prototype;\n    this.message = message;\n    this.status = status;\n  }\n  toString() {\n    return `HTTPError ${this.status}: ${this.message}`;\n  }\n}\nexports.HTTPError = HTTPError;\nclass HTTPNotFound extends HTTPError {\n  constructor(message) {\n    super(404, message);\n    this.constructor = HTTPNotFound;\n    this.__proto__ = HTTPNotFound.prototype;\n  }\n}\nexports.HTTPNotFound = HTTPNotFound;"],"names":["React","Fragment","useCallback","useEffect","useState","useMemo","PropTypes","Helmet","FormattedMessage","useIntl","normalizeSetBundleProduct","getUpdateBundleChildArray","Box","Button","Stack","useProduct","useProducts","useCategory","useShopperCustomersMutation","useShopperBasketsMutation","useCustomerId","useShopperBasketsMutationHelper","useCurrentBasket","useVariant","useNavigation","useEinstein","useDataCloud","useActiveData","useServerContext","RecommendedProducts","ProductView","InformationAccordion","HTTPNotFound","HTTPError","logger","API_ERROR_MESSAGE","EINSTEIN_RECOMMENDERS","MAX_CACHE_AGE","TOAST_ACTION_VIEW_WISHLIST","TOAST_MESSAGE_ADDED_TO_WISHLIST","TOAST_MESSAGE_ALREADY_IN_WISHLIST","STALE_WHILE_REVALIDATE","rebuildPathWithParams","useHistory","useLocation","useParams","useToast","useWishList","ProductDetail","_Object$keys","_bundleChildVariantId","_product$pageMetaTags","_product$pageMetaTags2","formatMessage","history","location","einstein","dataCloud","activeData","toast","navigate","customerId","isLoading","isBasketLoading","addItemToNewOrExistingBasket","updateItemsInBasketMutation","res","set","productId","urlParams","URLSearchParams","search","data","product","isProductLoading","isError","isProductError","error","productError","parameters","id","get","perPricebook","expand","allImages","keepPreviousData","selectedOptions","params","options","Map","forEach","value","key","includes","substring","category","isCategoryError","categoryError","primaryCategoryId","levels","childProductSelection","setChildProductSelection","childProductOrderability","setChildProductOrderability","selectedBundleQuantity","setSelectedBundleQuantity","childProductRefs","useRef","isProductASet","type","isProductABundle","bundle","bundleChildVariantIds","Object","keys","map","variant","join","bundleChildrenData","ids","select","enabled","length","bundledProducts","childProduct","index","matchingChildProduct","find","bundleChild","master","masterId","_objectSpread","inventory","comboProduct","_productError$respons","errorStatus","response","status","_categoryError$respon","primaryCategory","setPrimaryCategory","_product$type","item","updatedUrl","pathname","pid","replace","wishlist","isWishlistLoading","createCustomerProductListItem","handleAddToWishlist","quantity","_wishlist$customerPro","isItemInWishlist","customerProductListItems","i","mutate","listId","body","public","priority","onSuccess","title","action","createElement","onClick","onError","showError","showToast","handleAddToCart","_ref","_asyncToGenerator","productSelectionValues","size","Array","from","optionId","optionValueId","productItems","price","optionItems","sendAddToCart","console","log","_x","apply","arguments","handleChildProductValidation","_comboProduct$childPr","values","current","validateOrderability","scrollErrorIntoView","selectedProductIds","firstUnselectedProduct","childProducts","ref","scrollIntoView","behavior","block","handleProductSetAddToCart","handleProductBundleAddToCart","_ref2","selectedQuantity","childProductSelections","bundledProductItems","child","bundleChildMasterIds","currentBundle","productItem","_productItem$bundledP","_productItem$bundledP2","bundleChildIds","every","itemsToBeUpdated","mutateAsync","method","basketId","_x2","_x3","sendViewProduct","childrenProducts","setProducts","err","namespace","additionalProperties","className","layerStyle","pageTitle","pageMetaTags","name","content","some","tag","pageDescription","spacing","parentCategoryTree","addToCart","addToWishlist","childQuantity","isProductPartOfSet","isProductPartOfBundle","childOfBundleQuantity","selectedBundleParentQuantity","onVariantSelected","previousState","selections","display","defaultMessage","recommender","PDP_COMPLETE_SET","products","mx","base","md","lg","shouldFetch","PDP_MIGHT_ALSO_LIKE","PDP_RECENTLY_VIEWED","getTemplateName","propTypes","match","object","Accordion","AccordionItem","AccordionButton","AccordionPanel","AccordionIcon","direction","allowMultiple","maxWidth","flex","height","textAlign","fontWeight","fontSize","mb","mt","dangerouslySetInnerHTML","__html","longDescription"],"sourceRoot":""}