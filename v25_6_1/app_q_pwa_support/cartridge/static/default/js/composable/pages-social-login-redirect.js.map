{"version":3,"file":"pages-social-login-redirect.js","mappings":"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","sources":["webpack://composable-storefront-toolkit/./app/pages/social-login-redirect/index.jsx"],"sourcesContent":["/*\n * Copyright (c) 2024, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport React, {useEffect, useState} from 'react'\nimport {FormattedMessage, useIntl} from 'react-intl'\nimport {\n    Alert,\n    Box,\n    Container,\n    Stack,\n    Text,\n    Spinner\n} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {AlertIcon} from '@salesforce/retail-react-app/app/components/icons'\n\n// Hooks\nimport useNavigation from '@salesforce/retail-react-app/app/hooks/use-navigation'\nimport {useAuthHelper, AuthHelpers, useShopperBasketsMutation} from '@salesforce/commerce-sdk-react'\nimport {useSearchParams} from '@salesforce/retail-react-app/app/hooks'\nimport {useCurrentCustomer} from '@salesforce/retail-react-app/app/hooks/use-current-customer'\nimport {getConfig} from '@salesforce/pwa-kit-runtime/utils/ssr-config'\nimport {useAppOrigin} from '@salesforce/retail-react-app/app/hooks/use-app-origin'\nimport {\n    getSessionJSONItem,\n    clearSessionJSONItem,\n    buildRedirectURI\n} from '@salesforce/retail-react-app/app/utils/utils'\nimport {API_ERROR_MESSAGE} from '@salesforce/retail-react-app/app/constants'\n\nconst SocialLoginRedirect = () => {\n    const {formatMessage} = useIntl()\n    const navigate = useNavigation()\n    const [searchParams] = useSearchParams()\n    const loginIDPUser = useAuthHelper(AuthHelpers.LoginIDPUser)\n    const {data: customer} = useCurrentCustomer()\n    // Build redirectURI from config values\n    const appOrigin = useAppOrigin()\n    const redirectPath = getConfig().app.login.social?.redirectURI || ''\n    const redirectURI = buildRedirectURI(appOrigin, redirectPath)\n\n    const locatedFrom = getSessionJSONItem('returnToPage')\n    const mergeBasket = useShopperBasketsMutation('mergeBasket')\n    const [error, setError] = useState('')\n\n    // Runs after successful 3rd-party IDP authorization, processing query parameters\n    useEffect(() => {\n        if (!searchParams.code) {\n            return\n        }\n        const socialLogin = async () => {\n            try {\n                await loginIDPUser.mutateAsync({\n                    code: searchParams.code,\n                    redirectURI: redirectURI,\n                    ...(searchParams.usid && {usid: searchParams.usid})\n                })\n            } catch (error) {\n                const message = formatMessage(API_ERROR_MESSAGE)\n                setError(message)\n            }\n        }\n        socialLogin()\n    }, [])\n\n    // If customer is registered, push to secure account page\n    useEffect(() => {\n        if (!customer?.isRegistered) {\n            return\n        }\n        clearSessionJSONItem('returnToPage')\n        mergeBasket.mutate({\n            headers: {\n                // This is not required since the request has no body\n                // but CommerceAPI throws a '419 - Unsupported Media Type' error if this header is removed.\n                'Content-Type': 'application/json'\n            },\n            parameters: {\n                createDestinationBasket: true\n            }\n        })\n        if (locatedFrom) {\n            navigate(locatedFrom)\n        } else {\n            navigate('/account')\n        }\n    }, [customer?.isRegistered])\n\n    return (\n        <Box data-testid=\"login-redirect-page\" bg=\"gray.50\" py={[8, 16]}>\n            <Container\n                paddingTop={16}\n                width={['100%', '407px']}\n                bg=\"white\"\n                paddingBottom={14}\n                marginTop={8}\n                marginBottom={8}\n                borderRadius=\"base\"\n            >\n                {error && (\n                    <Alert status=\"error\" marginBottom={8}>\n                        <AlertIcon color=\"red.500\" boxSize={4} />\n                        <Text fontSize=\"sm\" ml={3}>\n                            {error}\n                        </Text>\n                    </Alert>\n                )}\n                <Stack justify=\"center\" align=\"center\" spacing={8} marginBottom={8}>\n                    <Spinner opacity={0.85} color=\"blue.600\" animationDuration=\"0.8s\" size=\"lg\" />\n                    <Text align=\"center\" fontSize=\"xl\" fontWeight=\"semibold\">\n                        <FormattedMessage\n                            id=\"social_login_redirect.message.authenticating\"\n                            defaultMessage=\"Authenticating...\"\n                        />\n                    </Text>\n                    <Text align=\"center\" fontSize=\"m\">\n                        <FormattedMessage\n                            id=\"social_login_redirect.message.redirect_link\"\n                            defaultMessage=\"If you are not automatically redirected, click <link>this link</link> to proceed.\"\n                            values={{\n                                link: (chunks) => (\n                                    <a\n                                        href=\"/account\"\n                                        style={{color: '#0176D3', textDecoration: 'underline'}}\n                                    >\n                                        {chunks}\n                                    </a>\n                                )\n                            }}\n                        />\n                    </Text>\n                </Stack>\n            </Container>\n        </Box>\n    )\n}\n\nSocialLoginRedirect.getTemplateName = () => 'social-login-redirect'\n\nexport default SocialLoginRedirect\n"],"names":["React","useEffect","useState","FormattedMessage","useIntl","Alert","Box","Container","Stack","Text","Spinner","AlertIcon","useNavigation","useAuthHelper","AuthHelpers","useShopperBasketsMutation","useSearchParams","useCurrentCustomer","getConfig","useAppOrigin","getSessionJSONItem","clearSessionJSONItem","buildRedirectURI","API_ERROR_MESSAGE","SocialLoginRedirect","_getConfig$app$login$","formatMessage","navigate","searchParams","loginIDPUser","LoginIDPUser","data","customer","appOrigin","redirectPath","app","login","social","redirectURI","locatedFrom","mergeBasket","error","setError","code","socialLogin","_ref","_asyncToGenerator","mutateAsync","_objectSpread","usid","message","apply","arguments","isRegistered","mutate","headers","parameters","createDestinationBasket","createElement","bg","py","paddingTop","width","paddingBottom","marginTop","marginBottom","borderRadius","status","color","boxSize","fontSize","ml","justify","align","spacing","opacity","animationDuration","size","fontWeight","id","defaultMessage","values","link","chunks","href","style","textDecoration","getTemplateName"],"sourceRoot":""}