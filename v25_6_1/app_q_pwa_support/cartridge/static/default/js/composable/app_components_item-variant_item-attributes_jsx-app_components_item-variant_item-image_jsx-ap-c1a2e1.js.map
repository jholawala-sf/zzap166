{"version":3,"file":"app_components_item-variant_item-attributes_jsx-app_components_item-variant_item-image_jsx-ap-c1a2e1.js","mappings":"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","sources":["webpack://composable-storefront-toolkit/./app/components/item-variant/index.jsx","webpack://composable-storefront-toolkit/./app/components/item-variant/item-attributes.jsx","webpack://composable-storefront-toolkit/./app/components/item-variant/item-image.jsx","webpack://composable-storefront-toolkit/./app/components/item-variant/item-name.jsx","webpack://composable-storefront-toolkit/./app/components/item-variant/item-price.jsx","webpack://composable-storefront-toolkit/./app/components/promo-popover/index.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React, {createContext, useContext} from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * This component and associated context/hook provide a convenient wrapper\n * around a group of components used for rendering product variant details.\n */\n\nconst ItemVariantContext = createContext()\n\nexport const useItemVariant = () => {\n    return useContext(ItemVariantContext)\n}\n\n/**\n * The Provider component for rendering product item and variant detail.\n */\nconst ItemVariantProvider = ({variant, children}) => {\n    return <ItemVariantContext.Provider value={variant}>{children}</ItemVariantContext.Provider>\n}\n\nItemVariantProvider.propTypes = {\n    variant: PropTypes.object,\n    children: PropTypes.any\n}\n\nexport default ItemVariantProvider\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {useIntl, FormattedMessage, FormattedNumber} from 'react-intl'\nimport {Flex, Stack, Text, Box} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {useItemVariant} from '@salesforce/retail-react-app/app/components/item-variant'\nimport PromoPopover from '@salesforce/retail-react-app/app/components/promo-popover'\nimport {useCurrency} from '@salesforce/retail-react-app/app/hooks'\nimport {useCurrentBasket} from '@salesforce/retail-react-app/app/hooks/use-current-basket'\nimport {usePromotions, useProducts, useProduct} from '@salesforce/commerce-sdk-react'\nimport {getDisplayVariationValues} from '@salesforce/retail-react-app/app/utils/product-utils'\n\n/**\n * In the context of a cart product item variant, this component renders a styled\n * list of the selected variation values as well as any promos (w/ info popover).\n */\nconst ItemAttributes = ({includeQuantity, currency, ...props}) => {\n    const variant = useItemVariant()\n    const {data: basket} = useCurrentBasket()\n    const {currency: activeCurrency} = useCurrency()\n    const promotionIds = variant.priceAdjustments?.map((adj) => adj.promotionId) ?? []\n    const intl = useIntl()\n\n    // Fetch all the promotions given by price adjustments. We display this info in\n    // the promotion info popover when applicable.\n    const {data: res} = usePromotions(\n        {\n            parameters: {\n                ids: promotionIds.join(',')\n            }\n        },\n        {\n            enabled: promotionIds.length > 0\n        }\n    )\n    const promos = res?.data || []\n    const variationValues = getDisplayVariationValues(\n        variant?.variationAttributes,\n        variant?.variationValues\n    )\n\n    // get variant info for bundled products in cart page and order history page\n    const productBundleIds =\n        variant?.bundledProductItems?.map(({productId}) => productId).join(',') ?? ''\n    const {data: productBundleVariantData, isLoading: bundleVariantIsLoading} = useProducts(\n        {\n            parameters: {\n                ids: productBundleIds,\n                allImages: false\n            }\n        },\n        {\n            enabled: Boolean(variant?.type?.bundle && productBundleIds),\n            select: (result) => {\n                // formats response so we can easily display child quantity/variant selection\n                return result?.data?.map((item) => {\n                    const quantity = variant?.bundledProductItems.find(\n                        (childProduct) => childProduct.productId === item.id\n                    )?.quantity\n                    return {\n                        ...item,\n                        quantity,\n                        variationValues: getDisplayVariationValues(\n                            item?.variationAttributes,\n                            item?.variationValues\n                        )\n                    }\n                })\n            }\n        }\n    )\n\n    // get bundle product data for wishlist page\n    const {data: productBundleData, isLoading: productBundleIsLoading} = useProduct(\n        {\n            parameters: {\n                id: variant?.id,\n                allImages: false\n            }\n        },\n        {\n            enabled: Boolean(variant?.type?.bundle && !productBundleIds)\n        }\n    )\n\n    return (\n        <Stack spacing={1.5} flex={1} {...props}>\n            {variationValues &&\n                Object.keys(variationValues).map((key) => (\n                    <Text\n                        lineHeight={1}\n                        color=\"gray.700\"\n                        fontSize=\"sm\"\n                        key={`${key}: ${variationValues[key]}`}\n                    >\n                        {key}: {variationValues[key]}\n                    </Text>\n                ))}\n\n            {/** TOOLKIT CUSTOMIZATION **/}\n            {variant?.optionItems && (\n                <Stack spacing={1.5}>\n                    {variant?.optionItems.map((option) => (\n                        <Text lineHeight={1} color=\"gray.700\" fontSize=\"sm\" key={option.optionId}>\n                            {option.itemText || option.optionValueId}\n                        </Text>\n                    ))}\n                </Stack>\n            )}\n            {/** END TOOLKIT CUSTOMIZATION **/}\n\n            {includeQuantity && (\n                <Text lineHeight={1} color=\"gray.700\" fontSize=\"sm\">\n                    <FormattedMessage\n                        defaultMessage=\"Quantity: {quantity}\"\n                        values={{quantity: variant.quantity}}\n                        id=\"item_attributes.label.quantity\"\n                    />\n                </Text>\n            )}\n\n            {!productBundleIsLoading && productBundleData && !productBundleVariantData && (\n                <Box>\n                    {productBundleData?.bundledProducts.map(({product, quantity}) => (\n                        <Box marginTop={2} key={product.id}>\n                            <Text fontSize=\"sm\" color=\"gray.700\" as=\"b\">\n                                {product?.name}\n                            </Text>\n                            <Text fontSize=\"sm\" color=\"gray.700\">\n                                {intl.formatMessage({\n                                    defaultMessage: 'Qty',\n                                    id: 'add_to_cart_modal.label.quantity'\n                                })}\n                                : {quantity}\n                            </Text>\n                        </Box>\n                    ))}\n                </Box>\n            )}\n\n            {!bundleVariantIsLoading && productBundleVariantData && (\n                <Box>\n                    <Text fontSize={15} marginTop={3} fontWeight={500}>\n                        {intl.formatMessage({\n                            defaultMessage: 'Selected Options',\n                            id: 'item_attributes.label.selected_options'\n                        })}\n                        :\n                    </Text>\n                    {productBundleVariantData?.map(\n                        ({variationValues, name: productName, quantity, id}) => {\n                            return (\n                                <Box key={id} marginTop={2}>\n                                    <Text fontSize=\"sm\" color=\"gray.700\" as=\"b\">\n                                        {productName}\n                                    </Text>\n                                    <Text fontSize=\"sm\" color=\"gray.700\">\n                                        {intl.formatMessage({\n                                            defaultMessage: 'Qty',\n                                            id: 'add_to_cart_modal.label.quantity'\n                                        })}\n                                        : {quantity}\n                                    </Text>\n                                    {Object.keys(variationValues).map((key) => {\n                                        const selectedVariant = `${key}: ${variationValues[key]}`\n                                        return (\n                                            <Text\n                                                fontSize=\"sm\"\n                                                color=\"gray.700\"\n                                                key={selectedVariant}\n                                            >\n                                                {selectedVariant}\n                                            </Text>\n                                        )\n                                    })}\n                                </Box>\n                            )\n                        }\n                    )}\n                </Box>\n            )}\n\n            {variant.priceAdjustments?.length > 0 && (\n                <Flex alignItems=\"center\">\n                    <Text lineHeight={1} color=\"gray.700\" fontSize=\"sm\">\n                        <FormattedMessage\n                            defaultMessage=\"Promotions\"\n                            id=\"item_attributes.label.promotions\"\n                        />\n                        {': '}\n                        <Text as=\"span\" color=\"green.700\">\n                            <FormattedNumber\n                                style=\"currency\"\n                                currency={currency || basket?.currency || activeCurrency}\n                                value={variant.priceAdjustments.reduce(\n                                    (acc, adj) => acc + (adj.price ?? 0),\n                                    0\n                                )}\n                            />\n                        </Text>\n                    </Text>\n                    <PromoPopover ml={2}>\n                        <Stack>\n                            {promos?.map((promo) => (\n                                <Text key={promo?.id} fontSize=\"sm\">\n                                    {promo?.calloutMsg}\n                                </Text>\n                            ))}\n                        </Stack>\n                    </PromoPopover>\n                </Flex>\n            )}\n        </Stack>\n    )\n}\n\nItemAttributes.propTypes = {\n    includeQuantity: PropTypes.bool,\n    currency: PropTypes.string\n}\n\nexport default ItemAttributes\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {AspectRatio, Box, Badge, Image} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {useItemVariant} from '.'\nimport {FormattedMessage} from 'react-intl'\nimport {findImageGroupBy} from '@salesforce/retail-react-app/app/utils/image-groups-utils'\n\n/**\n * In the context of a cart product item variant, this component renders the item's\n * main image.\n *\n * @todo = This component will render a `SALE` badge when the qualifier is available\n * on the custom property `c_isSale`. This will need to be expanded upon to handle\n * different badge/qualifiers and property names.\n */\nconst ItemImage = ({imageProps, ratio = 1, ...props}) => {\n    const variant = useItemVariant()\n\n    // We find the 'small' images in the variant's image groups based on variationValues and pick the first one\n    const image = findImageGroupBy(variant?.imageGroups, {\n        viewType: 'small',\n        selectedVariationAttributes: variant?.variationValues\n    })?.images?.[0]\n\n    return (\n        <Box width=\"84px\" backgroundColor=\"gray.100\" {...props}>\n            <AspectRatio ratio={ratio}>\n                <Box position=\"relative\">\n                    {variant.c_isSale && (\n                        <Badge\n                            position=\"absolute\"\n                            top={0}\n                            left={0}\n                            marginLeft={2}\n                            marginTop={2}\n                            fontSize=\"10px\"\n                            variant=\"solid\"\n                            colorScheme=\"blue\"\n                        >\n                            <FormattedMessage\n                                defaultMessage=\"Sale\"\n                                id=\"item_image.label.sale\"\n                                description=\"A sale badge placed on top of a product image\"\n                            />\n                        </Badge>\n                    )}\n                    {variant.isProductUnavailable && (\n                        <Badge\n                            position=\"absolute\"\n                            top={0}\n                            left={0}\n                            marginLeft={2}\n                            marginTop={2}\n                            fontSize=\"10px\"\n                            variant=\"solid\"\n                            colorScheme=\"red\"\n                        >\n                            <FormattedMessage\n                                defaultMessage=\"Unavailable\"\n                                id=\"item_image.label.unavailable\"\n                                description=\"A unavailable badge placed on top of a product image\"\n                            />\n                        </Badge>\n                    )}\n\n                    {image && (\n                        <Image\n                            alt={image.alt}\n                            src={`${image.disBaseLink || image.link}`}\n                            ignoreFallback={true}\n                            {...imageProps}\n                        />\n                    )}\n                </Box>\n            </AspectRatio>\n        </Box>\n    )\n}\n\nItemImage.propTypes = {\n    imageProps: PropTypes.object,\n    ratio: PropTypes.number\n}\n\nexport default ItemImage\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport {useItemVariant} from '.'\nimport Link from '@salesforce/retail-react-app/app/components/link'\nimport {Heading} from '@salesforce/retail-react-app/app/components/shared/ui'\n\n/**\n * In the context of a cart product item variant, this components simply renders\n * the item's name using the cart item field `productName`. We use this field\n * rather than variant `name` field as the variant detail may not yet be\n * available upon rendering.\n */\nconst ItemName = (props) => {\n    const variant = useItemVariant()\n    const productId = variant?.master?.masterId || variant.id\n\n    return (\n        <Heading as=\"h2\" fontSize=\"md\">\n            <Link {...props} color=\"black.600\" to={`/product/${productId}`}>\n                {variant.productName || variant.name}\n            </Link>\n        </Heading>\n    )\n}\n\nexport default ItemName\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {FormattedMessage, FormattedNumber} from 'react-intl'\nimport {\n    Stack,\n    Text,\n    useBreakpointValue\n} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {useItemVariant} from '.'\nimport {getPriceData} from '@salesforce/retail-react-app/app/utils/product-utils'\nimport DisplayPrice from '@salesforce/retail-react-app/app/components/display-price'\n\nconst PricePerItem = ({currency, basePrice}) => {\n    return (\n        <Text fontSize={{base: '12px', lg: '14px'}}>\n            <FormattedNumber style=\"currency\" currency={currency} value={basePrice} />\n            <FormattedMessage\n                defaultMessage=\"ea\"\n                id=\"price_per_item.label.each\"\n                description=\"Abbreviated 'each', follows price per item, like $10/ea\"\n            />\n        </Text>\n    )\n}\n\nPricePerItem.propTypes = {\n    currency: PropTypes.string.isRequired,\n    basePrice: PropTypes.number\n}\n\n/**\n * In the context of a cart product item variant, this component renders the item's\n * pricing, taking into account applied discounts as well as base item prices.\n */\nconst ItemPrice = ({currency, align = 'right', baseDirection = 'column', ...props}) => {\n    const variant = useItemVariant()\n    const {price, priceAfterItemDiscount} = variant\n    const isASet = variant?.type?.set\n    const isMaster = variant?.type?.master\n    let priceData\n    // When variant has basket pricing, we should prioritize these prices for displaying\n    // since they may have take promotion/discount into account\n    // NOTE: try NOT to re-calculate these values since basket-level discount is complicated\n    if (variant?.itemId) {\n        /** TOOLKIT CUSTOMIZATION **/\n        var optionTotal = 0\n        if (variant?.optionItems?.length) {\n            optionTotal = variant.optionItems.reduce((acc, option) => acc + option.price, 0)\n        }\n\n        priceData = {\n            currentPrice: priceAfterItemDiscount + optionTotal,\n            // we don't want to show strikethrough price for cart since listPrice is not available via basket pricing\n            listPrice: null,\n            pricePerUnit: variant?.pricePerUnit + optionTotal,\n            isASet,\n            isMaster,\n            isRange: isASet || isMaster || false,\n            isOnSale: price > priceAfterItemDiscount\n        }\n        /** END TOOLKIT CUSTOMIZATION **/\n    } else {\n        // for wishlist page we extract price info from variant/product obj\n        priceData = getPriceData(variant)\n    }\n    const isDesktop = useBreakpointValue({base: false, lg: true})\n\n    return (\n        <Stack\n            textAlign={align}\n            direction={baseDirection}\n            justifyContent={align === 'left' ? 'flex-start' : 'flex-end'}\n            alignItems=\"baseline\"\n            spacing={priceData?.isOnSale ? 0 : 1}\n            wrap=\"nowrap\"\n            {...props}\n        >\n            {!isDesktop && variant?.quantity > 1 && !isASet && priceData?.pricePerUnit && (\n                <PricePerItem currency={currency} basePrice={priceData.pricePerUnit} />\n            )}\n\n            {variant?.itemId ? (\n                <DisplayPrice\n                    labelForA11y={variant?.name}\n                    currency={currency}\n                    priceData={priceData}\n                    listPriceProps={{fontSize: 'sm'}}\n                />\n            ) : (\n                <DisplayPrice\n                    labelForA11y={variant?.name}\n                    currency={currency}\n                    priceData={priceData}\n                    quantity={variant?.quantity}\n                    listPriceProps={{fontSize: 'sm'}}\n                />\n            )}\n\n            {isDesktop && variant?.quantity > 1 && !isASet && priceData?.pricePerUnit && (\n                <PricePerItem currency={currency} basePrice={priceData.pricePerUnit} />\n            )}\n        </Stack>\n    )\n}\n\nItemPrice.propTypes = {\n    currency: PropTypes.string.isRequired,\n    align: PropTypes.string,\n    baseDirection: PropTypes.string\n}\n\nexport default ItemPrice\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Box,\n    IconButton,\n    Popover,\n    PopoverArrow,\n    PopoverBody,\n    PopoverCloseButton,\n    PopoverContent,\n    PopoverHeader,\n    PopoverTrigger,\n    Text\n} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {InfoIcon} from '@salesforce/retail-react-app/app/components/icons'\nimport {FormattedMessage, useIntl} from 'react-intl'\n\n/**\n * This component renders a small info icon and displays a popover when hovered. It could be adapted\n * to handle any kind of popover if needed, but for now its been set up to be used/shared for displaying\n * promotions applied to products and/or orders on cart, checkout, order confirmation and order history.\n */\nconst PromoPopover = ({header, children, ...props}) => {\n    const intl = useIntl()\n    return (\n        <Box position=\"relative\" {...props}>\n            <Popover isLazy placement=\"top\" boundary=\"scrollParent\" trigger=\"hover\" variant=\"small\">\n                <PopoverTrigger>\n                    <IconButton\n                        icon={\n                            <InfoIcon\n                                display=\"block\"\n                                boxSize=\"18px\"\n                                mt=\"-2px\"\n                                ml=\"-1px\"\n                                color=\"gray.600\"\n                            />\n                        }\n                        display=\"block\"\n                        size=\"xs\"\n                        height=\"14px\"\n                        width=\"14px\"\n                        minWidth=\"auto\"\n                        position=\"relative\"\n                        variant=\"unstyled\"\n                        aria-label={intl.formatMessage({\n                            id: 'promo_popover.assistive_msg.info',\n                            defaultMessage: 'Info'\n                        })}\n                    />\n                </PopoverTrigger>\n                <PopoverContent border=\"none\" borderRadius=\"base\">\n                    <Box boxShadow=\"lg\">\n                        <PopoverArrow />\n                        <PopoverCloseButton />\n                        <PopoverHeader borderBottom=\"none\">\n                            {header || (\n                                <Text fontWeight=\"bold\" fontSize=\"md\">\n                                    <FormattedMessage\n                                        defaultMessage=\"Promotions Applied\"\n                                        id=\"promo_popover.heading.promo_applied\"\n                                    />\n                                </Text>\n                            )}\n                        </PopoverHeader>\n                        <PopoverBody pt={0}>{children}</PopoverBody>\n                    </Box>\n                </PopoverContent>\n            </Popover>\n        </Box>\n    )\n}\n\nPromoPopover.propTypes = {\n    header: PropTypes.any,\n    children: PropTypes.any\n}\n\nexport default PromoPopover\n"],"names":["React","createContext","useContext","PropTypes","ItemVariantContext","useItemVariant","ItemVariantProvider","variant","children","createElement","Provider","value","propTypes","object","any","useIntl","FormattedMessage","FormattedNumber","Flex","Stack","Text","Box","PromoPopover","useCurrency","useCurrentBasket","usePromotions","useProducts","useProduct","getDisplayVariationValues","ItemAttributes","_ref","_variant$priceAdjustm","_variant$bundledProdu","_variant$type","_variant$type2","_variant$priceAdjustm2","includeQuantity","currency","props","_objectWithoutProperties","_excluded","data","basket","activeCurrency","promotionIds","priceAdjustments","map","adj","promotionId","intl","res","parameters","ids","join","enabled","length","promos","variationValues","variationAttributes","productBundleIds","bundledProductItems","productId","productBundleVariantData","isLoading","bundleVariantIsLoading","allImages","Boolean","type","bundle","select","result","_result$data","item","_variant$bundledProdu2","quantity","find","childProduct","id","_objectSpread","productBundleData","productBundleIsLoading","_extends","spacing","flex","Object","keys","key","lineHeight","color","fontSize","optionItems","option","optionId","itemText","optionValueId","defaultMessage","values","bundledProducts","product","marginTop","as","name","formatMessage","fontWeight","productName","selectedVariant","alignItems","style","reduce","acc","price","ml","promo","calloutMsg","bool","string","AspectRatio","Badge","Image","findImageGroupBy","ItemImage","_findImageGroupBy","_findImageGroupBy$ima","imageProps","ratio","image","imageGroups","viewType","selectedVariationAttributes","images","width","backgroundColor","position","c_isSale","top","left","marginLeft","colorScheme","isProductUnavailable","alt","src","disBaseLink","link","ignoreFallback","number","Link","Heading","ItemName","_variant$master","master","masterId","to","useBreakpointValue","getPriceData","DisplayPrice","PricePerItem","basePrice","base","lg","isRequired","ItemPrice","_priceData","_priceData2","_priceData3","align","baseDirection","priceAfterItemDiscount","isASet","set","isMaster","priceData","itemId","_variant$optionItems","optionTotal","currentPrice","listPrice","pricePerUnit","isRange","isOnSale","isDesktop","textAlign","direction","justifyContent","wrap","labelForA11y","listPriceProps","IconButton","Popover","PopoverArrow","PopoverBody","PopoverCloseButton","PopoverContent","PopoverHeader","PopoverTrigger","InfoIcon","header","isLazy","placement","boundary","trigger","icon","display","boxSize","mt","size","height","minWidth","border","borderRadius","boxShadow","borderBottom","pt"],"sourceRoot":""}