{"version":3,"file":"salesforce-retail-react-app-app-pages-page-not-found.js","mappings":"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","sources":["webpack://composable-storefront-toolkit/./app/pages/page-not-found/index.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport React from 'react'\nimport {\n    Box,\n    Heading,\n    Flex,\n    Button,\n    Stack,\n    Text\n} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {Helmet} from 'react-helmet'\nimport {useIntl} from 'react-intl'\nimport {useServerContext} from '@salesforce/pwa-kit-react-sdk/ssr/universal/hooks'\nimport {SearchIcon} from '@salesforce/retail-react-app/app/components/icons'\nimport {useHistory} from 'react-router-dom'\nimport Link from '@salesforce/retail-react-app/app/components/link'\n\nconst PageNotFound = () => {\n    const intl = useIntl()\n    const history = useHistory()\n    const {res} = useServerContext()\n\n    if (res) {\n        res.status(404)\n    }\n\n    return (\n        <Box\n            layerStyle=\"page\"\n            className=\"page-not-found\"\n            height={'100%'}\n            padding={{lg: 8, md: 6, sm: 0, base: 0}}\n        >\n            <Helmet>\n                <title>\n                    {intl.formatMessage({\n                        defaultMessage: \"The page you're looking for can't be found.\",\n                        id: 'page_not_found.title.page_cant_be_found'\n                    })}\n                </title>\n            </Helmet>\n\n            <Flex\n                h=\"100%\"\n                justify=\"center\"\n                align=\"center\"\n                flexDirection=\"column\"\n                px={{base: 5, md: 12}}\n                py={{base: 48, md: 60}}\n            >\n                <SearchIcon boxSize={['30px', '32px']} mb={8} />\n                <Heading as=\"h2\" fontSize={['xl', '2xl', '2xl', '3xl']} mb={2} align=\"center\">\n                    {intl.formatMessage({\n                        defaultMessage: \"The page you're looking for can't be found.\",\n                        id: 'page_not_found.title.page_cant_be_found'\n                    })}\n                </Heading>\n                <Box mb={12}>\n                    <Text textAlign=\"center\">\n                        {intl.formatMessage({\n                            defaultMessage:\n                                'Please try retyping the address, going back to the previous page, or going to the home page.',\n                            id: 'page_not_found.message.suggestion_to_try'\n                        })}\n                    </Text>\n                </Box>\n                <Stack direction={['column', 'row']} width={['100%', 'auto']}>\n                    <Button\n                        variant=\"outline\"\n                        bg=\"white\"\n                        onClick={() => history.goBack()}\n                        borderColor={'gray.200'}\n                    >\n                        {intl.formatMessage({\n                            defaultMessage: 'Back to previous page',\n                            id: 'page_not_found.action.go_back'\n                        })}\n                    </Button>\n                    <Button as={Link} to={'/'}>\n                        {intl.formatMessage({\n                            defaultMessage: 'Go to home page',\n                            id: 'page_not_found.link.homepage'\n                        })}\n                    </Button>\n                </Stack>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default PageNotFound\n"],"names":["React","Box","Heading","Flex","Button","Stack","Text","Helmet","useIntl","useServerContext","SearchIcon","useHistory","Link","PageNotFound","intl","history","res","status","createElement","layerStyle","className","height","padding","lg","md","sm","base","formatMessage","defaultMessage","id","h","justify","align","flexDirection","px","py","boxSize","mb","as","fontSize","textAlign","direction","width","variant","bg","onClick","goBack","borderColor","to"],"sourceRoot":""}