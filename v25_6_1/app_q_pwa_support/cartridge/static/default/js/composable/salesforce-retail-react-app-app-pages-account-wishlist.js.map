{"version":3,"file":"salesforce-retail-react-app-app-pages-account-wishlist.js","mappings":"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","sources":["webpack://composable-storefront-toolkit/./app/components/page-action-placeholder/index.jsx","webpack://composable-storefront-toolkit/./app/pages/account/wishlist/index.jsx","webpack://composable-storefront-toolkit/./app/pages/account/wishlist/partials/wishlist-primary-action.jsx","webpack://composable-storefront-toolkit/./app/pages/account/wishlist/partials/wishlist-secondary-button-group.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Box, Button, Stack, Text} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {PlusIcon} from '@salesforce/retail-react-app/app/components/icons'\n\nconst PageActionPlaceHolder = ({heading, text, icon, buttonText, buttonProps, onButtonClick}) => {\n    return (\n        <Stack\n            spacing={2}\n            py={12}\n            px={4}\n            alignItems=\"center\"\n            borderRadius=\"base\"\n            background=\"gray.50\"\n        >\n            <Box>{icon}</Box>\n            <Stack spacing={6} alignItems=\"center\">\n                <Box>\n                    <Text align=\"center\" fontSize=\"lg\" fontWeight=\"bold\">\n                        {heading}\n                    </Text>\n                    <Text align=\"center\" fontSize=\"md\" color=\"gray.700\">\n                        {text}\n                    </Text>\n                </Box>\n                <Button onClick={onButtonClick} leftIcon={<PlusIcon />} {...buttonProps}>\n                    {buttonText}\n                </Button>\n            </Stack>\n        </Stack>\n    )\n}\n\nPageActionPlaceHolder.propTypes = {\n    heading: PropTypes.string,\n    text: PropTypes.string,\n    buttonText: PropTypes.string,\n    icon: PropTypes.any,\n    buttonProps: PropTypes.object,\n    onButtonClick: PropTypes.func\n}\n\nexport default PageActionPlaceHolder\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React, {useState, useEffect, useRef} from 'react'\nimport {FormattedMessage, useIntl} from 'react-intl'\nimport {\n    Box,\n    Flex,\n    Skeleton,\n    Stack,\n    Heading\n} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {useProducts, useShopperCustomersMutation} from '@salesforce/commerce-sdk-react'\n\nimport useNavigation from '@salesforce/retail-react-app/app/hooks/use-navigation'\nimport {useToast} from '@salesforce/retail-react-app/app/hooks/use-toast'\nimport {useWishList} from '@salesforce/retail-react-app/app/hooks/use-wish-list'\n\nimport PageActionPlaceHolder from '@salesforce/retail-react-app/app/components/page-action-placeholder'\nimport {HeartIcon} from '@salesforce/retail-react-app/app/components/icons'\nimport ProductItem from '@salesforce/retail-react-app/app/components/product-item'\nimport WishlistPrimaryAction from '@salesforce/retail-react-app/app/pages/account/wishlist/partials/wishlist-primary-action'\nimport WishlistSecondaryButtonGroup from '@salesforce/retail-react-app/app/pages/account/wishlist/partials/wishlist-secondary-button-group'\n\nimport {API_ERROR_MESSAGE} from '@salesforce/retail-react-app/app/constants'\nimport {useCurrentCustomer} from '@salesforce/retail-react-app/app/hooks/use-current-customer'\nimport UnavailableProductConfirmationModal from '@salesforce/retail-react-app/app/components/unavailable-product-confirmation-modal'\n\nconst numberOfSkeletonItems = 3\n\nconst AccountWishlist = () => {\n    const navigate = useNavigation()\n    const {formatMessage} = useIntl()\n    const toast = useToast()\n\n    const headingRef = useRef()\n    useEffect(() => {\n        // Focus the 'Wishlist' header when the component mounts for accessibility\n        headingRef?.current?.focus()\n    }, [])\n\n    const [selectedItem, setSelectedItem] = useState(undefined)\n    const [isWishlistItemLoading, setWishlistItemLoading] = useState(false)\n\n    const {data: wishListData, isLoading: isWishListLoading} = useWishList()\n    const productIds = wishListData?.customerProductListItems?.map((item) => item.productId)\n\n    const {data: productsData, isLoading: isProductsLoading} = useProducts(\n        {\n            parameters: {\n                ids: productIds?.join(','),\n                allImages: true,\n                perPricebook: true\n            }\n        },\n        {enabled: productIds?.length > 0}\n    )\n\n    // If a product is added to the wishlist many times, it gets collapased into 1 line item\n    const wishListItems = wishListData?.customerProductListItems?.reduce((itemsData, item) => {\n        const productData = productsData?.data?.find((product) => product.id === item.productId)\n        return {...itemsData, [item.productId]: {...item, product: productData}}\n    }, {})\n\n    const updateCustomerProductListItem = useShopperCustomersMutation(\n        'updateCustomerProductListItem'\n    )\n    const deleteCustomerProductListItem = useShopperCustomersMutation(\n        'deleteCustomerProductListItem'\n    )\n\n    const {data: customer} = useCurrentCustomer()\n\n    const handleSecondaryAction = async (itemId, promise) => {\n        setWishlistItemLoading(true)\n        setSelectedItem(itemId)\n\n        try {\n            await promise\n            // No need to handle error here, as the inner component will take care of it\n        } finally {\n            setWishlistItemLoading(false)\n            setSelectedItem(undefined)\n        }\n    }\n\n    const handleUnavailableProducts = async (unavailableProductIds) => {\n        if (!unavailableProductIds.length) return\n        await Promise.all(\n            unavailableProductIds.map(async (id) => {\n                const item = wishListItems?.find((item) => {\n                    return item.productId.toString() === id.toString()\n                })\n                const parameters = {\n                    customerId: customer.customerId,\n                    itemId: item?.id,\n                    listId: wishListData?.id\n                }\n                await deleteCustomerProductListItem.mutateAsync({parameters})\n            })\n        )\n    }\n\n    const handleItemQuantityChanged = async (quantity, item) => {\n        let isValidChange = false\n        setSelectedItem(item.productId)\n\n        const body = {\n            ...item,\n            quantity: parseInt(quantity)\n        }\n        // To meet expected schema, remove the custom `product` we added\n        delete body.product\n\n        const parameters = {\n            customerId: customer.customerId,\n            itemId: item.id,\n            listId: wishListData?.id\n        }\n\n        const mutation =\n            parseInt(quantity) > 0\n                ? updateCustomerProductListItem.mutateAsync({body, parameters})\n                : deleteCustomerProductListItem.mutateAsync({parameters})\n\n        try {\n            await mutation\n            isValidChange = true\n            setSelectedItem(undefined)\n        } catch (err) {\n            toast({\n                title: formatMessage(API_ERROR_MESSAGE),\n                status: 'error'\n            })\n        }\n\n        // If true, the quantity picker would immediately update its number\n        // without waiting for the invalidated lists data to finish refetching\n        return isValidChange\n    }\n\n    const hasWishlistItems = Object.keys(wishListItems ?? {}).length > 0\n    const isPageLoading = hasWishlistItems ? isProductsLoading : isWishListLoading\n\n    return (\n        <Stack spacing={4} data-testid=\"account-wishlist-page\">\n            <Heading as=\"h1\" fontSize=\"2xl\" tabIndex=\"0\" ref={headingRef}>\n                <FormattedMessage defaultMessage=\"Wishlist\" id=\"account_wishlist.title.wishlist\" />\n            </Heading>\n\n            {isPageLoading && (\n                <Box data-testid=\"sf-wishlist-skeleton\">\n                    {new Array(numberOfSkeletonItems).fill(0).map((i, idx) => (\n                        <Box\n                            key={idx}\n                            p={[4, 6]}\n                            my={4}\n                            border=\"1px solid\"\n                            borderColor=\"gray.100\"\n                            borderRadius=\"base\"\n                        >\n                            <Flex width=\"full\" align=\"flex-start\">\n                                <Skeleton boxSize={['88px', 36]} mr={4} />\n\n                                <Stack spacing={2}>\n                                    <Skeleton h=\"20px\" w=\"112px\" />\n                                    <Skeleton h=\"20px\" w=\"84px\" />\n                                    <Skeleton h=\"20px\" w=\"140px\" />\n                                </Stack>\n                            </Flex>\n                        </Box>\n                    ))}\n                </Box>\n            )}\n\n            {!isPageLoading && !hasWishlistItems && (\n                <PageActionPlaceHolder\n                    data-testid=\"empty-wishlist\"\n                    icon={<HeartIcon boxSize={8} />}\n                    heading={formatMessage({\n                        defaultMessage: 'No Wishlist Items',\n                        id: 'account_wishlist.heading.no_wishlist'\n                    })}\n                    text={formatMessage({\n                        defaultMessage: 'Continue shopping and add items to your wishlist.',\n                        id: 'account_wishlist.description.continue_shopping'\n                    })}\n                    buttonText={formatMessage({\n                        defaultMessage: 'Continue Shopping',\n                        id: 'account_wishlist.button.continue_shopping'\n                    })}\n                    buttonProps={{leftIcon: undefined}}\n                    onButtonClick={() => navigate('/')}\n                />\n            )}\n\n            {!isPageLoading &&\n                wishListItems &&\n                Object.keys(wishListItems).map((key) => {\n                    const item = wishListItems[key]\n                    return (\n                        <ProductItem\n                            key={item.id}\n                            product={{\n                                ...item.product,\n                                quantity: item.quantity\n                            }}\n                            showLoading={\n                                (updateCustomerProductListItem.isLoading ||\n                                    deleteCustomerProductListItem.isLoading ||\n                                    isWishlistItemLoading) &&\n                                selectedItem === item.productId\n                            }\n                            primaryAction={<WishlistPrimaryAction />}\n                            onItemQuantityChange={(quantity) =>\n                                handleItemQuantityChanged(quantity, item)\n                            }\n                            secondaryActions={\n                                <WishlistSecondaryButtonGroup\n                                    productListItemId={item.id}\n                                    productName={item.product.name}\n                                    // Focus to 'Wishlist' header after remove for accessibility\n                                    focusElementOnRemove={headingRef}\n                                    onClick={handleSecondaryAction}\n                                />\n                            }\n                        />\n                    )\n                })}\n\n            <UnavailableProductConfirmationModal\n                productItems={wishListData?.customerProductListItems}\n                handleUnavailableProducts={handleUnavailableProducts}\n            />\n        </Stack>\n    )\n}\n\nexport default AccountWishlist\n","/*\n * Copyright (c) 2022, Salesforce, Inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React, {useState} from 'react'\nimport {Button, useDisclosure} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {FormattedMessage, useIntl} from 'react-intl'\nimport {useItemVariant} from '@salesforce/retail-react-app/app/components/item-variant'\nimport ProductViewModal from '@salesforce/retail-react-app/app/components/product-view-modal'\nimport {useToast} from '@salesforce/retail-react-app/app/hooks/use-toast'\nimport {API_ERROR_MESSAGE} from '@salesforce/retail-react-app/app/constants'\nimport Link from '@salesforce/retail-react-app/app/components/link'\nimport {useShopperBasketsMutationHelper} from '@salesforce/commerce-sdk-react'\n\n/**\n * Renders primary action on a product-item card in the form of a button.\n * Represents the most prominent action you want the user to perform with the product-item\n * eg.: Add to cart option for wishlist items\n */\nconst WishlistPrimaryAction = () => {\n    const variant = useItemVariant()\n    const {addItemToNewOrExistingBasket} = useShopperBasketsMutationHelper()\n    const {formatMessage} = useIntl()\n    const isMasterProduct = variant?.type?.master || false\n    const isProductASet = variant?.type?.set\n    const isProductABundle = variant?.type?.bundle\n    const showToast = useToast()\n    const [isLoading, setIsLoading] = useState(false)\n    const {isOpen, onOpen, onClose} = useDisclosure()\n\n    const handleAddToCart = async (item, quantity) => {\n        setIsLoading(true)\n\n        const isAddingASet = Boolean(item.setProducts)\n        const productItems = isAddingASet\n            ? item.setProducts.map((child) => ({\n                  productId: child.id || child.productId,\n                  price: child.price,\n                  quantity\n              }))\n            : [\n                  {\n                      productId: item.id || item.productId,\n                      price: item.price,\n                      quantity\n                  }\n              ]\n\n        try {\n            await addItemToNewOrExistingBasket(productItems)\n            showToast({\n                title: formatMessage(\n                    {\n                        defaultMessage:\n                            '{quantity} {quantity, plural, one {item} other {items}} added to cart',\n                        id: 'wishlist_primary_action.info.added_to_cart'\n                    },\n                    {quantity: isAddingASet ? quantity * item.setProducts.length : quantity}\n                ),\n                status: 'success'\n            })\n            onClose()\n        } catch (e) {\n            showToast({\n                title: formatMessage(API_ERROR_MESSAGE),\n                status: 'error'\n            })\n        } finally {\n            setIsLoading(false)\n        }\n    }\n\n    const buttonText = {\n        viewOptions: (\n            <FormattedMessage\n                defaultMessage=\"View Options\"\n                id=\"wishlist_primary_action.button.view_options\"\n            />\n        ),\n        viewFullDetails: (\n            <FormattedMessage\n                defaultMessage=\"View Full Details\"\n                id=\"wishlist_primary_action.button.view_full_details\"\n            />\n        ),\n        addToCart: (\n            <FormattedMessage\n                defaultMessage=\"Add to Cart\"\n                id=\"wishlist_primary_action.button.add_to_cart\"\n            />\n        ),\n        addSetToCart: (\n            <FormattedMessage\n                defaultMessage=\"Add Set to Cart\"\n                id=\"wishlist_primary_action.button.add_set_to_cart\"\n            />\n        )\n    }\n\n    if (isProductASet) {\n        if (variant.setProducts?.every((child) => !hasVariants(child))) {\n            return (\n                <Button\n                    variant={'solid'}\n                    onClick={() => handleAddToCart(variant, variant.quantity)}\n                    w={'full'}\n                    isLoading={isLoading}\n                    aria-label={formatMessage(\n                        {\n                            id: 'wishlist_primary_action.button.addSetToCart.label',\n                            defaultMessage: 'Add {productName} set to cart'\n                        },\n                        {productName: variant.name}\n                    )}\n                >\n                    {buttonText.addSetToCart}\n                </Button>\n            )\n        } else {\n            return (\n                <Button\n                    as={Link}\n                    href={`/product/${variant.id}`}\n                    w={'full'}\n                    variant={'solid'}\n                    _hover={{textDecoration: 'none'}}\n                    aria-label={formatMessage(\n                        {\n                            id: 'wishlist_primary_action.button.viewFullDetails.label',\n                            defaultMessage: 'View full details for {productName}'\n                        },\n                        {productName: variant.name}\n                    )}\n                >\n                    {buttonText.viewFullDetails}\n                </Button>\n            )\n        }\n    } else if (isProductABundle) {\n        return (\n            <Button\n                as={Link}\n                href={`/product/${variant.id}`}\n                w={'full'}\n                variant={'solid'}\n                _hover={{textDecoration: 'none'}}\n                aria-label={formatMessage(\n                    {\n                        id: 'wishlist_primary_action.button.viewFullDetails.label',\n                        defaultMessage: 'View full details for {productName}'\n                    },\n                    {productName: variant.name}\n                )}\n            >\n                {buttonText.viewFullDetails}\n            </Button>\n        )\n    } else {\n        if (isMasterProduct) {\n            return (\n                <>\n                    <Button\n                        aria-label={formatMessage(\n                            {\n                                id: 'wishlist_primary_action.button.view_options.label',\n                                defaultMessage: 'View Options for {productName}'\n                            },\n                            {productName: variant.name}\n                        )}\n                        w={'full'}\n                        variant={'solid'}\n                        onClick={onOpen}\n                    >\n                        {buttonText.viewOptions}\n                    </Button>\n                    {isOpen && (\n                        <ProductViewModal\n                            isOpen={isOpen}\n                            onOpen={onOpen}\n                            onClose={onClose}\n                            product={variant}\n                            addToCart={(variant, quantity) => handleAddToCart(variant, quantity)}\n                        />\n                    )}\n                </>\n            )\n        } else {\n            return (\n                <Button\n                    variant={'solid'}\n                    onClick={() => handleAddToCart(variant, variant.quantity)}\n                    w={'full'}\n                    isLoading={isLoading}\n                    aria-label={formatMessage(\n                        {\n                            id: 'wishlist_primary_action.button.addToCart.label',\n                            defaultMessage: 'Add {productName} to cart'\n                        },\n                        {productName: variant.name}\n                    )}\n                >\n                    {buttonText.addToCart}\n                </Button>\n            )\n        }\n    }\n}\n\nexport default WishlistPrimaryAction\n\nconst hasVariants = (product) => Boolean(product?.variants)\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Button,\n    ButtonGroup,\n    useDisclosure\n} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {useIntl, defineMessage, FormattedMessage} from 'react-intl'\nimport {useShopperCustomersMutation} from '@salesforce/commerce-sdk-react'\n\nimport {useToast} from '@salesforce/retail-react-app/app/hooks/use-toast'\nimport {useCurrentCustomer} from '@salesforce/retail-react-app/app/hooks/use-current-customer'\nimport {useWishList} from '@salesforce/retail-react-app/app/hooks/use-wish-list'\n\nimport ConfirmationModal from '@salesforce/retail-react-app/app/components/confirmation-modal/index'\nimport {useItemVariant} from '@salesforce/retail-react-app/app/components/item-variant'\nimport {noop} from '@salesforce/retail-react-app/app/utils/utils'\nimport {API_ERROR_MESSAGE} from '@salesforce/retail-react-app/app/constants'\n\nexport const REMOVE_WISHLIST_ITEM_CONFIRMATION_DIALOG_CONFIG = {\n    dialogTitle: defineMessage({\n        defaultMessage: 'Confirm Remove Item',\n        id: 'confirmation_modal.remove_wishlist_item.title.confirm_remove'\n    }),\n    confirmationMessage: defineMessage({\n        defaultMessage: 'Are you sure you want to remove this item from your wishlist?',\n        id: 'confirmation_modal.remove_wishlist_item.message.sure_to_remove'\n    }),\n    primaryActionLabel: defineMessage({\n        defaultMessage: 'Yes, remove item',\n        id: 'confirmation_modal.remove_wishlist_item.action.yes'\n    }),\n    primaryActionAriaLabel: defineMessage({\n        defaultMessage: 'Yes, remove item',\n        id: 'confirmation_modal.remove_cart_item.assistive_msg.yes'\n    }),\n    alternateActionLabel: defineMessage({\n        defaultMessage: 'No, keep item',\n        id: 'confirmation_modal.remove_wishlist_item.action.no'\n    }),\n    alternateActionAriaLabel: defineMessage({\n        defaultMessage: 'No, keep item',\n        id: 'confirmation_modal.remove_cart_item.assistive_msg.no'\n    }),\n    onPrimaryAction: noop\n}\n\n/**\n * Renders secondary actions on a product-item card in the form of a button group.\n * Represents other actions you want the user to perform with the product-item (eg.: Remove or Edit)\n */\nconst WishlistSecondaryButtonGroup = ({\n    productListItemId,\n    productName = '',\n    focusElementOnRemove,\n    onClick = noop\n}) => {\n    const variant = useItemVariant()\n    const {data: customer} = useCurrentCustomer()\n    const {data: wishList} = useWishList()\n    const modalProps = useDisclosure()\n    const toast = useToast()\n    const {formatMessage} = useIntl()\n\n    const showRemoveItemConfirmation = () => {\n        modalProps.onOpen()\n    }\n\n    const deleteCustomerProductListItem = useShopperCustomersMutation(\n        'deleteCustomerProductListItem'\n    )\n\n    const handleItemRemove = async () => {\n        try {\n            const promise = deleteCustomerProductListItem.mutateAsync({\n                parameters: {\n                    customerId: customer.customerId,\n                    listId: wishList?.id,\n                    itemId: productListItemId\n                }\n            })\n            onClick(variant.id, promise)\n\n            await promise\n\n            toast({\n                title: formatMessage({\n                    defaultMessage: 'Item removed from wishlist',\n                    id: 'wishlist_secondary_button_group.info.item_removed'\n                }),\n                status: 'success'\n            })\n\n            // After we remove an item from the wishlist\n            // we need to place focus to the next logical place for accessibility\n            focusElementOnRemove?.current?.focus()\n        } catch {\n            toast({title: formatMessage(API_ERROR_MESSAGE), status: 'error'})\n        }\n    }\n\n    return (\n        <>\n            <ButtonGroup spacing=\"6\">\n                <Button\n                    variant=\"link\"\n                    size=\"sm\"\n                    onClick={showRemoveItemConfirmation}\n                    data-testid={`sf-wishlist-remove-${productListItemId}`}\n                    aria-label={formatMessage(\n                        {\n                            defaultMessage: 'Remove {productName}',\n                            id: 'wishlist_secondary_button_group.info.item.remove.label'\n                        },\n                        {productName}\n                    )}\n                >\n                    <FormattedMessage\n                        defaultMessage=\"Remove\"\n                        id=\"wishlist_secondary_button_group.action.remove\"\n                    />\n                </Button>\n                {/* <Button variant=\"link\" size=\"sm\" onClick={onItemEdit}>\n            <FormattedMessage defaultMessage=\"Edit\" />\n        </Button> */}\n            </ButtonGroup>\n\n            <ConfirmationModal\n                {...REMOVE_WISHLIST_ITEM_CONFIRMATION_DIALOG_CONFIG}\n                onPrimaryAction={handleItemRemove}\n                {...modalProps}\n            />\n        </>\n    )\n}\n\nWishlistSecondaryButtonGroup.propTypes = {\n    productListItemId: PropTypes.string,\n    productName: PropTypes.string,\n    focusElementOnRemove: PropTypes.object,\n    onClick: PropTypes.func\n}\n\nexport default WishlistSecondaryButtonGroup\n"],"names":["React","PropTypes","Box","Button","Stack","Text","PlusIcon","PageActionPlaceHolder","heading","text","icon","buttonText","buttonProps","onButtonClick","createElement","spacing","py","px","alignItems","borderRadius","background","align","fontSize","fontWeight","color","_extends","onClick","leftIcon","propTypes","string","any","object","func","useState","useEffect","useRef","FormattedMessage","useIntl","Flex","Skeleton","Heading","useProducts","useShopperCustomersMutation","useNavigation","useToast","useWishList","HeartIcon","ProductItem","WishlistPrimaryAction","WishlistSecondaryButtonGroup","API_ERROR_MESSAGE","useCurrentCustomer","UnavailableProductConfirmationModal","numberOfSkeletonItems","AccountWishlist","_wishListData$custome","_wishListData$custome2","navigate","formatMessage","toast","headingRef","_headingRef$current","current","focus","selectedItem","setSelectedItem","undefined","isWishlistItemLoading","setWishlistItemLoading","data","wishListData","isLoading","isWishListLoading","productIds","customerProductListItems","map","item","productId","productsData","isProductsLoading","parameters","ids","join","allImages","perPricebook","enabled","length","wishListItems","reduce","itemsData","_productsData$data","productData","find","product","id","_objectSpread","updateCustomerProductListItem","deleteCustomerProductListItem","customer","handleSecondaryAction","_ref","_asyncToGenerator","itemId","promise","_x","_x2","apply","arguments","handleUnavailableProducts","_ref2","unavailableProductIds","Promise","all","_ref3","toString","customerId","listId","mutateAsync","_x4","_x3","handleItemQuantityChanged","_ref4","quantity","isValidChange","body","parseInt","mutation","err","title","status","_x5","_x6","hasWishlistItems","Object","keys","isPageLoading","as","tabIndex","ref","defaultMessage","Array","fill","i","idx","key","p","my","border","borderColor","width","boxSize","mr","h","w","showLoading","primaryAction","onItemQuantityChange","secondaryActions","productListItemId","productName","name","focusElementOnRemove","productItems","useDisclosure","useItemVariant","ProductViewModal","Link","useShopperBasketsMutationHelper","_variant$type","_variant$type2","_variant$type3","variant","addItemToNewOrExistingBasket","isMasterProduct","type","master","isProductASet","set","isProductABundle","bundle","showToast","setIsLoading","isOpen","onOpen","onClose","handleAddToCart","isAddingASet","Boolean","setProducts","child","price","e","viewOptions","viewFullDetails","addToCart","addSetToCart","_variant$setProducts","every","hasVariants","href","_hover","textDecoration","Fragment","variants","ButtonGroup","defineMessage","ConfirmationModal","noop","REMOVE_WISHLIST_ITEM_CONFIRMATION_DIALOG_CONFIG","dialogTitle","confirmationMessage","primaryActionLabel","primaryActionAriaLabel","alternateActionLabel","alternateActionAriaLabel","onPrimaryAction","wishList","modalProps","showRemoveItemConfirmation","handleItemRemove","_focusElementOnRemove","size"],"sourceRoot":""}