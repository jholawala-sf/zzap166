{"version":3,"file":"salesforce-retail-react-app-app-pages-page-viewer.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAQoC;AACX;AACiB;AAC+B;AACnB;AAC6B;AACrB;AACgC;AAEJ;AAE1F,MAAMiB,yBAAyB,GAAG;EAC9B,2BAA2B,EAAEJ,4FAAS;EACtC,8BAA8B,EAAEC,gGAAa;EAC7C,2BAA2B,EAAEd,4DAAQ;EACrC,iCAAiC,EAAEC,kEAAc;EACjD,iCAAiC,EAAEC,kEAAc;EACjD,iCAAiC,EAAEC,kEAAc;EACjD,iCAAiC,EAAEC,kEAAc;EACjD,iCAAiC,EAAEC,kEAAc;EACjD,iCAAiC,EAAEC,kEAAc;EACjD,2BAA2B,EAAEK,kFAAUA;AAC3C,CAAC;AAED,MAAMO,UAAU,GAAGA,CAAA,KAAM;EACrB,MAAM;IAACC;EAAM,CAAC,GAAGX,2DAAS,CAAC,CAAC;EAC5B,MAAM;IAACY,IAAI,EAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGZ,uEAAO,CAAC;IAACa,UAAU,EAAE;MAACJ;IAAM;EAAC,CAAC,CAAC;EAE3D,IAAIG,KAAK,EAAE;IAAA,IAAAE,eAAA,EAAAC,gBAAA;IACP,IAAIC,UAAU,GAAG,EAAAF,eAAA,GAAAF,KAAK,CAACK,QAAQ,cAAAH,eAAA,uBAAdA,eAAA,CAAgBI,MAAM,MAAK,GAAG,GAAGZ,4FAAY,GAAGD,yFAAS;IAC1E,MAAM,IAAIW,UAAU,EAAAD,gBAAA,GAACH,KAAK,CAACK,QAAQ,cAAAF,gBAAA,uBAAdA,gBAAA,CAAgBI,UAAU,CAAC;EACpD;EAEA,oBACItB,0DAAA,CAACE,sFAAG;IAACsB,UAAU,EAAE;EAAO,gBACpBxB,0DAAA,CAACK,2EAAI;IACDS,IAAI,EAAEA,IAAK;IACXW,UAAU,EAAEf,yBAA0B;IACtCgB,mBAAmB,EAAEtB,kFAAUA;EAAC,CACnC,CACA,CAAC;AAEd,CAAC;AAEDO,UAAU,CAACgB,WAAW,GAAG,YAAY;AAErC,iEAAehB,UAAU","sources":["webpack://composable-storefront-toolkit/./app/pages/page-viewer/index.jsx"],"sourcesContent":["import {\n    Carousel,\n    MobileGrid1r1c,\n    MobileGrid2r1c,\n    MobileGrid2r2c,\n    MobileGrid2r3c,\n    MobileGrid3r1c,\n    MobileGrid3r2c\n} from '../../page-designer/layouts'\nimport React from 'react'\nimport {useParams} from 'react-router-dom'\nimport {Box} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {usePage} from '@salesforce/commerce-sdk-react'\nimport * as Components from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {Page} from '@salesforce/commerce-sdk-react/components'\nimport {ImageTile, ImageWithText} from '@salesforce/retail-react-app/app/page-designer/assets'\n\nimport {HTTPError, HTTPNotFound} from '@salesforce/pwa-kit-react-sdk/ssr/universal/errors'\n\nconst PAGEDESIGNER_TO_COMPONENT = {\n    'commerce_assets.photoTile': ImageTile,\n    'commerce_assets.imageAndText': ImageWithText,\n    'commerce_layouts.carousel': Carousel,\n    'commerce_layouts.mobileGrid1r1c': MobileGrid1r1c,\n    'commerce_layouts.mobileGrid2r1c': MobileGrid2r1c,\n    'commerce_layouts.mobileGrid2r2c': MobileGrid2r2c,\n    'commerce_layouts.mobileGrid2r3c': MobileGrid2r3c,\n    'commerce_layouts.mobileGrid3r1c': MobileGrid3r1c,\n    'commerce_layouts.mobileGrid3r2c': MobileGrid3r2c,\n    'headless.einsteinAssisted': Components\n}\n\nconst PageViewer = () => {\n    const {pageId} = useParams()\n    const {data: page, error} = usePage({parameters: {pageId}})\n\n    if (error) {\n        let ErrorClass = error.response?.status === 404 ? HTTPNotFound : HTTPError\n        throw new ErrorClass(error.response?.statusText)\n    }\n\n    return (\n        <Box layerStyle={'page'}>\n            <Page\n                page={page}\n                components={PAGEDESIGNER_TO_COMPONENT}\n                jsxParserComponents={Components}\n            />\n        </Box>\n    )\n}\n\nPageViewer.displayName = 'PageViewer'\n\nexport default PageViewer\n"],"names":["Carousel","MobileGrid1r1c","MobileGrid2r1c","MobileGrid2r2c","MobileGrid2r3c","MobileGrid3r1c","MobileGrid3r2c","React","useParams","Box","usePage","Components","Page","ImageTile","ImageWithText","HTTPError","HTTPNotFound","PAGEDESIGNER_TO_COMPONENT","PageViewer","pageId","data","page","error","parameters","_error$response","_error$response2","ErrorClass","response","status","statusText","createElement","layerStyle","components","jsxParserComponents","displayName"],"sourceRoot":""}