{"version":3,"file":"agent-editor.js","sources":["../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/subscribable.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/focusManager.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/thenable.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/retryer.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/removable.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/query.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryCache.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutation.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryClient.js","../../../../../../../node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../../../../../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../../../../../../node_modules/@tanstack/react-query/build/modern/isRestoring.js","../../../../../../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../../../../../../node_modules/@tanstack/react-query/build/modern/utils.js","../../../../../../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../../../../../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../../../../../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../../../../../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../../../client/default/js/experience/editors/helpers.ts","../../../../client/default/js/experience/editors/agent-editor.tsx"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nexport {\n  pendingThenable\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = (cb) => setTimeout(cb, 0);\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        client: this.#client,\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      client: this.#client,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            client: context.client,\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = {\n      type: \"active\",\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = {\n        ...filters,\n        type: filters?.refetchType ?? filters?.type ?? \"active\"\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult(notifyOptions);\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    const trackedResult = {};\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key);\n          onPropTracked?.(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    if (options.select && newState.data !== void 0) {\n      if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(newState.data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    } else {\n      data = newState.data;\n    }\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n        if (options.select && placeholderData !== void 0) {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.#selectError = null;\n          } catch (selectError) {\n            this.#selectError = selectError;\n          }\n        }\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult(notifyOptions) {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const defaultNotifyOptions = {};\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n    this.#notify({ ...defaultNotifyOptions, ...notifyOptions });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/isRestoring.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=isRestoring.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n  if (typeof throwError === \"function\") {\n    return throwError(...params);\n  }\n  return !!throwError;\n}\nfunction noop() {\n}\nexport {\n  noop,\n  shouldThrowError\n};\n//# sourceMappingURL=utils.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"./utils.js\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  const originalStaleTime = defaultedOptions.staleTime;\n  if (defaultedOptions.suspense) {\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => Math.max(originalStaleTime(...args), 1e3) : Math.max(originalStaleTime ?? 1e3, 1e3);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./isRestoring.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nimport { noop } from \"./utils.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const client = useQueryClient(queryClient);\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","import { useQuery, QueryClient } from \"@tanstack/react-query\";\n\nconst CLIENT_ID = \"6c957560-464f-4a98-ad0f-5e9662527e27\";\nconst HOSTNAME = new URL(document.baseURI).hostname;\n\nexport const queryClient = new QueryClient({\n    defaultOptions: {\n        queries: {\n            refetchOnWindowFocus: false,\n            refetchOnReconnect: false,\n            retry: 0,\n        },\n    },\n});\n\nasync function getAccessToken() {\n    const response = await fetch(`https://${HOSTNAME}/dw/oauth2/access_token`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: `grant_type=urn%3Ademandware%3Aparams%3Aoauth%3Agrant-type%3Aclient-id%3Adwsid%3Adwsecuretoken&client_id=${CLIENT_ID}`,\n    });\n    const data = await response.json();\n    const token = data.access_token;\n    return token;\n}\n\nexport async function getAgentDeployments() {\n    const token = await getAccessToken();\n    const response = await fetch(\n        `https://${HOSTNAME}/s/-/dw/data/v23_2/custom_objects_search/QLabsDataStore`,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n                query: {\n                    bool_query: {\n                        must: [\n                            {\n                                term_query: {\n                                    fields: [\"c_typeId\"],\n                                    operator: \"is\",\n                                    values: [\"agents\"],\n                                },\n                            },\n                        ],\n                    },\n                },\n                select: \"(**)\",\n                start: 0,\n            }),\n        },\n    );\n    const data = await response.json();\n    if (data.error) {\n        throw new Error(data.error.message);\n    }\n    return data.hits.map((hit) => {\n        const agent = {\n            __id: hit.key_value_string,\n            __type: hit.c_typeId,\n            ...JSON.parse(hit.c_data),\n        };\n        return agent;\n    });\n}\n\nexport const useAgentDeployments = () => {\n    return useQuery({\n        queryKey: [\"agentDeployments\"],\n        queryFn: getAgentDeployments,\n    });\n};\n","import { useState, useEffect } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./main.css\";\nimport SLDSConfig from \"./slds\";\nimport { queryClient, useAgentDeployments } from \"./helpers\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\n\ninterface AgentAttrs {\n    agentId: string;\n    context: Record<string, any>;\n}\n\nfunction AgentEditorWrapper(props) {\n    return (\n        <SLDSConfig>\n            <QueryClientProvider client={queryClient}>\n                <AgentEditor {...props} />\n            </QueryClientProvider>\n        </SLDSConfig>\n    );\n}\n\nfunction AgentEditor({ config, value }) {\n    const [readOnly, setReadOnly] = useState(false);\n    const { data: agents, isLoading } = useAgentDeployments();\n    const [attrs, setAttrs] = useState<AgentAttrs>(value || {});\n\n    useEffect(() => {\n        emit({\n            type: \"sfcc:value\",\n            payload: attrs,\n        });\n    }, [attrs]);\n\n    useEffect(() => {\n        emit({\n            type: \"sfcc:interacted\",\n        });\n    }, []);\n\n    return (\n        <div className=\"space-y-4 py-2 px-1\">\n            <div className={\"slds-form-element\"}>\n                <label className=\"slds-form-element__label\" htmlFor={`agents`}>\n                    Agent Deployment Name\n                    <span className=\"text-red-500 ml-1\">*</span>\n                </label>\n                <div className=\"slds-form-element__control\">\n                    <select\n                        id={`agents`}\n                        className=\"slds-select\"\n                        required={true}\n                        value={attrs.agentId}\n                        onChange={(e) => {\n                            setAttrs({\n                                ...attrs,\n                                agentId: e.target.value,\n                            });\n                        }}\n                    >\n                        {isLoading ? (\n                            <option value=\"\">Loading...</option>\n                        ) : (\n                            <>\n                                <option value=\"\">Select an agent</option>\n                                {agents?.map((agent) => (\n                                    <option key={agent.__id} value={agent.__id}>\n                                        {agent.name}\n                                    </option>\n                                ))}\n                            </>\n                        )}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nsubscribe(\n    \"sfcc:ready\",\n    ({ config, value }: { config: any; value: AgentAttrs | null }) => {\n        const container = document.createElement(\"div\");\n        document.body.appendChild(container);\n        const root = createRoot(container);\n        root.render(<AgentEditorWrapper config={config} value={value} />);\n    },\n);\n"],"names":["noop","_a","_cleanup","_setup","getDefaultState","_b","_c","_d","_retryer","dispatch_fn","_f","_e","_h","_g","_i","_mutationCache","_defaultOptions","_client","React.createContext","queryClient","React.useContext","React.useEffect","jsx","React.useState","React.useSyncExternalStore","React.useCallback","CLIENT_ID","HOSTNAME","URL","document","baseURI","hostname","QueryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnReconnect","retry","getAccessToken","response","fetch","method","headers","body","data","json","token","access_token","getAgentDeployments","Authorization","JSON","stringify","query","bool_query","must","term_query","fields","operator","values","select","start","error","Error","message","hits","map","hit","agent","__id","key_value_string","__type","c_typeId","parse","c_data","useAgentDeployments","useQuery","queryKey","queryFn","AgentEditorWrapper","props","AgentEditor","config","value","readOnly","setReadOnly","useState","agents","isLoading","attrs","setAttrs","useEffect","type","payload","agentId","e","target","name","subscribe","container","createElement","appendChild","root","createRoot","render"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}